var searchIndex = {};
searchIndex["nphysics2d"] = {"doc":"nphysics ======== nphysics is a 2 and 3-dimensional physics engine for games and animations. It uses ncollide for collision detection, and nalgebra for vector/matrix math. 2D and 3D implementations both share the same code!","items":[[0,"algebra","nphysics2d","Dynamics-specific algebraic entities: velocity, forces, and inertias.",null,null],[3,"Velocity2","nphysics2d::algebra","A velocity structure combining both the linear angular velocities of a point.",null,null],[12,"linear","","The linear velocity.",0,null],[12,"angular","","The angular velocity.",0,null],[3,"Velocity3","","A velocity structure combining both the linear angular velocities of a point.",null,null],[12,"linear","","The linear velocity.",1,null],[12,"angular","","The angular velocity.",1,null],[3,"Force2","","A force with a linear and agular (torque) component.",null,null],[12,"linear","","The linear force.",2,null],[12,"angular","","The torque.",2,null],[3,"Force3","","A force with a linear and agular (torque) component.",null,null],[12,"linear","","The linear force.",3,null],[12,"angular","","The linear force.",3,null],[3,"Inertia2","","The inertia of a rigid body grouping both its mass and its angular inertia.",null,null],[12,"linear","","The linear part (mass) of the inertia.",4,null],[12,"angular","","The angular inertia.",4,null],[3,"Inertia3","","The inertia of a rigid body grouping both its mass and its angular inertia.",null,null],[12,"linear","","The linear part (mass) of the inertia.",5,null],[12,"angular","","The angular inertia.",5,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"velocity2"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create velocity from its linear and angular parts.",0,{"inputs":[{"name":"vector2"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_with_vectors","","Create velocity from its linear and angular parts.",0,{"inputs":[{"name":"vector2"},{"name":"vector1"}],"output":{"name":"self"}}],[11,"angular","","Create a purely angular velocity.",0,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"linear","","Create a purely linear velocity.",0,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"zero","","Create a zero velocity.",0,{"inputs":[],"output":{"name":"self"}}],[11,"angular_vector","","The angular part of the velocity.",0,{"inputs":[{"name":"self"}],"output":{"name":"vector1"}}],[11,"as_slice","","This velocity seen as a slice.",0,null],[11,"as_mut_slice","","This velocity seen as a mutable slice.",0,null],[11,"as_vector","","This velocity seen as a vector.",0,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"as_vector_mut","","This velocity seen as a mutable vector.",0,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"from_vector","","Create a velocity from a vector.",0,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"from_slice","","Create a velocity from a slice.",0,null],[11,"shift","","Compute the velocity of a point that is located at the coordinates `shift` relative to the point having `self` as velocity.",0,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"self"}}],[11,"rotated","","Rotate each component of `self` by `rot`.",0,{"inputs":[{"name":"self"},{"name":"rotation2"}],"output":{"name":"self"}}],[11,"transformed","","Transform each component of `self` by `iso`.",0,{"inputs":[{"name":"self"},{"name":"isometry2"}],"output":{"name":"self"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"velocity3"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create velocity from its linear and angular parts.",1,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"new_with_vectors","","Create velocity from its linear and angular parts.",1,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"angular","","Create a purely angular velocity.",1,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"linear","","Create a purely linear velocity.",1,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"zero","","Create a zero velocity.",1,{"inputs":[],"output":{"name":"self"}}],[11,"angular_vector","","The angular part of the velocity.",1,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"as_slice","","This velocity seen as a slice.",1,null],[11,"as_mut_slice","","This velocity seen as a mutable slice.",1,null],[11,"as_vector","","This velocity seen as a vector.",1,{"inputs":[{"name":"self"}],"output":{"name":"vector6"}}],[11,"as_vector_mut","","This velocity seen as a mutable vector.",1,{"inputs":[{"name":"self"}],"output":{"name":"vector6"}}],[11,"from_vector","","Create a velocity from a vector.",1,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"from_slice","","Create a velocity from a slice.",1,null],[11,"shift","","Compute the velocity of a point that is located at the coordinates `shift` relative to the point having `self` as velocity.",1,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"transformed","","Transform each component of `self` by `iso`.",1,{"inputs":[{"name":"self"},{"name":"isometry3"}],"output":{"name":"self"}}],[11,"rotated","","Rotate each component of `self` by `rot`.",1,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":{"name":"self"}}],[11,"add","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"force2"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a force from its linear and angular components.",2,{"inputs":[{"name":"vector2"},{"name":"n"}],"output":{"name":"self"}}],[11,"zero","","A zero force.",2,{"inputs":[],"output":{"name":"self"}}],[11,"from_slice","","Create a force from a slice where the entries 0 and 1 are for the linear part and 2 for the angular part.",2,null],[11,"from_vector","","Create a force from a vector where the entries 0 and 1 are for the linear part and 2 for the angular part.",2,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"torque","","Create a pure torque.   ",2,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"torque_from_vector","","Create a pure torque.",2,{"inputs":[{"name":"vector1"}],"output":{"name":"self"}}],[11,"linear","","Create a pure linear force.",2,{"inputs":[{"name":"vector2"}],"output":{"name":"self"}}],[11,"linear_at_point","","Creates the resultant of a linear force applied at the given point (relative to the center of mass).",2,{"inputs":[{"name":"vector2"},{"name":"point2"}],"output":{"name":"self"}}],[11,"torque_at_point","","Creates the resultant of a torque applied at the given point (relative to the center of mass).",2,{"inputs":[{"name":"n"},{"name":"point2"}],"output":{"name":"self"}}],[11,"torque_from_vector_at_point","","Creates the resultant of a torque applied at the given point (relative to the center of mass).",2,{"inputs":[{"name":"vector1"},{"name":"point2"}],"output":{"name":"self"}}],[11,"as_slice","","This force seen as a slice.",2,null],[11,"as_vector","","This force seen as a vector.",2,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"as_vector_mut","","This force seen as a mutable vector.",2,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"neg","","",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"force3"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a force from its linear and angular components.",3,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"zero","","A zero force.",3,{"inputs":[],"output":{"name":"self"}}],[11,"from_slice","","Create a force from a slice where the linear part are stored first.",3,null],[11,"from_vector","","Create a force from a vector where the linear part are stored first.",3,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"torque","","Create a pure torque.   ",3,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"torque_from_vector","","Create a pure torque.",3,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"torque_at_point","","Creates the resultant of a torque applied at the given point (relative to the center of mass).",3,{"inputs":[{"name":"vector3"},{"name":"point3"}],"output":{"name":"self"}}],[11,"torque_from_vector_at_point","","Creates the resultant of a torque applied at the given point (relative to the center of mass).",3,{"inputs":[{"name":"vector3"},{"name":"point3"}],"output":{"name":"self"}}],[11,"linear","","Create a pure linear force.",3,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"linear_at_point","","Creates the resultant of a linear force applied at the given point (relative to the center of mass).",3,{"inputs":[{"name":"vector3"},{"name":"point3"}],"output":{"name":"self"}}],[11,"as_slice","","This force seen as a slice.",3,null],[11,"as_vector","","This force seen as a vector.",3,{"inputs":[{"name":"self"}],"output":{"name":"vector6"}}],[11,"as_vector_mut","","This force seen as a mutable vector.",3,{"inputs":[{"name":"self"}],"output":{"name":"vector6"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"neg","","",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"inertia2"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an inertia from its linear and angular components.",4,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_with_angular_matrix","","Creates an inertia from its linear and angular components.",4,{"inputs":[{"name":"n"},{"name":"matrix1"}],"output":{"name":"self"}}],[11,"mass","","Get the mass.",4,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"zero","","Create a zero inertia.",4,{"inputs":[],"output":{"name":"self"}}],[11,"angular_matrix","","Get the angular inertia tensor.",4,{"inputs":[{"name":"self"}],"output":{"name":"matrix1"}}],[11,"to_matrix","","Convert the inertia into a matrix where the mass is represented as a 2x2 diagonal matrix on the upper-left corner, and the angular part as a 1x1 matrix on the lower-rigth corner.",4,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"transformed","","Compute the inertia on the given coordinate frame.",4,{"inputs":[{"name":"self"},{"name":"isometry2"}],"output":{"name":"self"}}],[11,"inverse","","Inverts this inetia matrix.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"inertia2"}],"output":{"name":"inertia2"}}],[11,"add_assign","","",4,{"inputs":[{"name":"self"},{"name":"inertia2"}],"output":null}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"velocity2"}],"output":{"name":"force2"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"force2"}],"output":{"name":"velocity2"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"inertia3"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an inertia from its linear and angular components.",5,{"inputs":[{"name":"n"},{"name":"matrix3"}],"output":{"name":"self"}}],[11,"new_with_angular_matrix","","Creates an inertia from its linear and angular components.",5,{"inputs":[{"name":"n"},{"name":"matrix3"}],"output":{"name":"self"}}],[11,"mass","","Get the mass.",5,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"zero","","Create a zero inertia.",5,{"inputs":[],"output":{"name":"self"}}],[11,"angular_matrix","","Get the angular inertia tensor.",5,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"to_matrix","","Convert the inertia into a matrix where the mass is represented as a 3x3 diagonal matrix on the upper-left corner, and the angular part as a 3x3 matrix on the lower-rigth corner.",5,{"inputs":[{"name":"self"}],"output":{"name":"matrix6"}}],[11,"transformed","","Compute the inertia on the given coordinate frame.",5,{"inputs":[{"name":"self"},{"name":"isometry3"}],"output":{"name":"self"}}],[11,"inverse","","Inverts this inetia matrix.",5,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"add","","",5,{"inputs":[{"name":"self"},{"name":"inertia3"}],"output":{"name":"inertia3"}}],[11,"add_assign","","",5,{"inputs":[{"name":"self"},{"name":"inertia3"}],"output":null}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"velocity3"}],"output":{"name":"force3"}}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"force3"}],"output":{"name":"velocity3"}}],[0,"counters","nphysics2d","Counters for benchmarking various parts of the physics engine.",null,null],[3,"CollisionDetectionCounters","nphysics2d::counters","Performance counters related to collision detection.",null,null],[12,"ncontact_pairs","","Number of contact pairs detected.",6,null],[12,"broad_phase_time","","Time spent for the broad-phase of the collision detection.",6,null],[12,"narrow_phase_time","","Time spent for the narrow-phase of the collision detection.",6,null],[3,"SolverCounters","","Performance counters related to constraints resolution.",null,null],[12,"nconstraints","","Number of constraints generated.",7,null],[12,"ncontacts","","Number of contacts found.",7,null],[12,"resolution_time","","Time spent for the resolution of the constraints (force computation).",7,null],[12,"assembly_time","","Time spent for the assembly of all the constraints into a linear complentarity problem.",7,null],[12,"position_update_time","","Time spent for the update of the position of the bodies.",7,null],[3,"StagesCounters","","Performance counters related to each stage of the time step.",null,null],[12,"update_time","","Time spent for updating the kinematic and dynamics of every body.",8,null],[12,"collision_detection_time","","Total time spent for the collision detection (including both broad- and narrow- phases).",8,null],[12,"island_construction_time","","Time spent for the computation of collision island and body activation/deactivation (sleeping).",8,null],[12,"solver_time","","Total time spent for the constraints resolution and position update.t",8,null],[3,"Timer","","A timer.",null,null],[3,"Counters","","Aggregation of all the performances counters tracked by nphysics.",null,null],[11,"new","","Creates a new counter initialized to zero.",6,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new counter initialized to zero.",7,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new counter intialized to zero.",8,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"timer"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new timer initialized to zero and not started.",9,{"inputs":[],"output":{"name":"self"}}],[11,"start","","Start the timer.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"pause","","Pause the timer.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"resume","","Resume the timer.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"time","","The measured time between the last `.start()` and `.pause()` calls.",9,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"new","","Create a new set of counters initialized to wero.",10,{"inputs":[{"name":"bool"}],"output":{"name":"self"}}],[11,"enable","","Enable all the counters.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"enabled","","Return `true` if the counters are enabled.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"disable","","Disable all the counters.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"step_started","","Notify that the time-step has started.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"step_completed","","Notfy that the time-step has finished.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"step_time","","Total time spent for one step of the physics engine.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"set_nconstraints","","Set the number of constraints generated.",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"set_ncontact_pairs","","Set the number of contact pairs generated.",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"update_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"update_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"update_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"collision_detection_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"collision_detection_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"collision_detection_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"island_construction_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"island_construction_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"island_construction_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"solver_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"solver_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"solver_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"assembly_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"assembly_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"assembly_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"resolution_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"resolution_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"resolution_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"position_update_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"position_update_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"positon_update_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"broad_phase_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"broad_phase_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"broad_phase_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"narrow_phase_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"narrow_phase_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"narrow_phase_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"detection","nphysics2d","Collision detection information.",null,null],[3,"ActivationManager","nphysics2d::detection","Structure that monitors island-based activation/deactivation of bodies.",null,null],[3,"ColliderContactManifold","","A contact manifold between two bodies.",null,null],[12,"collider1","","The first collider involved in the contact.",11,null],[12,"collider2","","The second collider involved in the contact.",11,null],[12,"pos_wrt_body1","","The position of the contact manifold wrt. the first body.",11,null],[12,"pos_wrt_body2","","The position of the contact manifold wrt. the second body.",11,null],[12,"manifold","","The contact manifold.",11,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"collidercontactmanifold"}}],[11,"new","","Initialize a new contact manifold.",11,{"inputs":[{"name":"collider"},{"name":"collider"},{"name":"contactmanifold"}],"output":{"name":"self"}}],[11,"len","","The number of contacts on the manifold.",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"contacts","","Get all the contacts from the manifold.",11,null],[11,"deepest_contact","","Get the deepest contact, if any, from the manifold.",11,{"inputs":[{"name":"self"}],"output":{"generics":["trackedcontact"],"name":"option"}}],[11,"body1","","The handle of the first body part involved in the contact.",11,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"body2","","The handle of the first body part involved in the contact.",11,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"new","","Creates a new `ActivationManager2`.",12,{"inputs":[{"name":"n"}],"output":{"name":"activationmanager"}}],[11,"deferred_activate","","Notify the `ActivationManager2` that is has to activate an object at the next update.",12,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":null}],[11,"update","","Update the activation manager, activating and deactivating objects when needed.",12,{"inputs":[{"name":"self"},{"name":"bodyset"},{"name":"collisionworld"},{"name":"slab"},{"name":"vec"}],"output":null}],[0,"force_generator","nphysics2d","Persistant force generation.",null,null],[3,"ConstantAcceleration","nphysics2d::force_generator","Force generator adding a constant acceleration at the center of mass of a set of body parts.",null,null],[3,"Spring","","Generator of a force proportional to the distance separating two bodies.",null,null],[11,"new","","Adds a new constant acceleration generator.",13,{"inputs":[{"name":"vector"},{"name":"n"}],"output":{"name":"self"}}],[11,"add_body_part","","Add a body part to be affected by this force generator.",13,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":null}],[11,"apply","","",13,{"inputs":[{"name":"self"},{"name":"integrationparameters"},{"name":"bodyset"}],"output":{"name":"bool"}}],[11,"new","","Initialize a spring attached to `b1` and `b2` at the points `anchor1` and `anchor2`.",14,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"name":"point"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Sets the attach point to the first body.",14,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"set_anchor_2","","Sets the attach point to the second body.",14,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"apply","","",14,{"inputs":[{"name":"self"},{"name":"integrationparameters"},{"name":"bodyset"}],"output":{"name":"bool"}}],[6,"ForceGeneratorHandle","","The handle of a force generator.",null,null],[8,"ForceGenerator","","A persistant force generator.",null,null],[10,"apply","","Apply forces to some bodies.",15,{"inputs":[{"name":"self"},{"name":"integrationparameters"},{"name":"bodyset"}],"output":{"name":"bool"}}],[0,"joint","nphysics2d","Joints using the reduced-coordinates formalism or using constraints.",null,null],[3,"CartesianJoint","nphysics2d::joint","A joint that allows only all the translational degrees of freedom between two multibody links.",null,null],[3,"FixedJoint","","A joint that does not allow any relative degrees of freedom.",null,null],[3,"FreeJoint","","A joint that allows all the relative degrees of freedom between two multibody links.",null,null],[3,"PrismaticJoint","","A unit joint that allows only one translational degree on freedom.",null,null],[3,"RevoluteJoint","","A unit joint that allows only one relative rotational degree of freedom between two multibody links.",null,null],[3,"CartesianConstraint","","A constraint that removes all relative angular motion between two body parts.",null,null],[3,"FixedConstraint","","A constraint that removes all degrees of freedom between two body parts.",null,null],[3,"JointMotor","","Description of a motor applied to a joint.",null,null],[12,"desired_velocity","","The velocity the motor will attempt to reach.",16,null],[12,"max_force","","The maximum force deliverable by the motor.",16,null],[12,"enabled","","Whether or not the motor is active.",16,null],[3,"MouseConstraint","","A spring-like constraint to be used to drag a body part with the mouse.",null,null],[3,"PrismaticConstraint","","A constraint that remove all be one translational degrees of freedom.",null,null],[3,"RevoluteConstraint","","A constraint that removes all relative motions except the rotation between two body parts.",null,null],[5,"unit_joint_num_velocity_constraints","","Computes the maximum number of velocity constraints to be applied by the given unit joint.",null,{"inputs":[{"name":"j"}],"output":{"name":"usize"}}],[5,"unit_joint_position_constraint","","Initializes and generate the position constraints applicable to the multibody links attached to this joint.",null,null],[5,"unit_joint_velocity_constraints","","Initializes and generate the velocity constraints applicable to the multibody links attached to this joint.",null,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cartesianjoint"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a cartesian joint with an initial position given by `position`.",17,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"ndofs","","",17,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",17,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",17,null],[11,"jacobian","","",17,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",17,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",17,null],[11,"jacobian_mul_coordinates","","",17,null],[11,"jacobian_dot_mul_coordinates","","",17,null],[11,"default_damping","","",17,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",17,null],[11,"apply_displacement","","",17,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"fixedjoint"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a joint that does not a allow any degrees of freedom between two multibody links.",18,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"ndofs","","",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",18,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",18,null],[11,"jacobian","","",18,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",18,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",18,null],[11,"integrate","","",18,null],[11,"apply_displacement","","",18,null],[11,"jacobian_mul_coordinates","","",18,null],[11,"jacobian_dot_mul_coordinates","","",18,null],[11,"default_damping","","",18,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"freejoint"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a free joint with the given initial position of the descendent, relative to the ground.",19,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"ndofs","","",19,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",19,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",19,null],[11,"jacobian","","",19,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",19,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",19,null],[11,"integrate","","",19,null],[11,"apply_displacement","","",19,null],[11,"jacobian_mul_coordinates","","",19,null],[11,"jacobian_dot_mul_coordinates","","",19,null],[11,"default_damping","","",19,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"prismaticjoint"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new prismatic joint where the allowed traslation is defined along the provided axis.",20,{"inputs":[{"generics":["vector"],"name":"unit"},{"name":"n"}],"output":{"name":"self"}}],[11,"offset","","The relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"translation","","The relative translation of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":{"name":"translation"}}],[11,"min_offset","","The lower limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset","","The upper limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset","","Disable the lower limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset","","Disable the upper limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset","","Set the lower limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset","","Set the upper limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_linear_motor_enabled","","Returns `true` if the joint motor is enabled.",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_linear_motor","","Enable the joint motor.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_linear_motor","","Disable the joint motor.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_linear_motor_velocity","","The desired relative velocity to be enforced by the joint motor.",20,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_linear_motor_velocity","","Set the desired relative velocity to be enforced by the joint motor.",20,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_linear_motor_force","","The maximum force that can be output by the joint motor.",20,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_linear_motor_force","","Set the maximum force that can be output by the joint motor.",20,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"ndofs","","",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",20,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",20,null],[11,"jacobian","","",20,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",20,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",20,null],[11,"default_damping","","",20,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",20,null],[11,"apply_displacement","","",20,null],[11,"jacobian_mul_coordinates","","",20,null],[11,"jacobian_dot_mul_coordinates","","",20,null],[11,"num_velocity_constraints","","",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",20,null],[11,"num_position_constraints","","",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",20,null],[11,"position","","",20,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"motor","","",20,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[11,"min_position","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_position","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"revolutejoint"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new revolute joint with an initial angle.",21,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"axis","","The axis of the rotational degree of freedom.",21,{"inputs":[{"name":"self"}],"output":{"generics":["angularvector"],"name":"unit"}}],[11,"angle","","The angle of rotation.",21,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"rotation","","The rotation from an attached multibody link to its dependent.",21,{"inputs":[{"name":"self"}],"output":{"name":"rotation"}}],[11,"local_jacobian","","The jacobian of this joint expressed in the local coordinate frame of the joint.",21,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"local_jacobian_dot","","The time-derivative of the jacobian of this joint expressed in the local coordinate frame of the joint.",21,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"local_jacobian_dot_veldiff","","The velocity-derivative of the time-derivative of the jacobian of this joint expressed in the local coordinate frame of the joint.",21,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"min_angle","","The lower limit of the rotation angle.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_angle","","The upper limit of the rotation angle.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_angle","","Disable the lower limit of the rotation angle.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_angle","","Disable the upper limit of the rotation angle.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_angle","","Enable and set the lower limit of the rotation angle.",21,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_angle","","Enable and set the upper limit of the rotation angle.",21,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_angular_motor_enabled","","Return `true` if the angular motor of this joint is enabled.",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_angular_motor","","Enable the angular motor of this joint.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_angular_motor","","Disable the angular motor of this joint.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_angular_motor_velocity","","The desired angular velocity of the joint motor.",21,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_angular_motor_velocity","","Set the desired angular velocity of the joint motor.",21,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_angular_motor_torque","","The maximum torque that can be delivered by the joint motor.",21,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_angular_motor_torque","","Set the maximum torque that can be delivered by the joint motor.",21,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"ndofs","","",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",21,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",21,null],[11,"jacobian","","",21,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",21,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",21,null],[11,"integrate","","",21,null],[11,"default_damping","","",21,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"apply_displacement","","",21,null],[11,"jacobian_mul_coordinates","","",21,null],[11,"jacobian_dot_mul_coordinates","","",21,null],[11,"num_velocity_constraints","","",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",21,null],[11,"num_position_constraints","","",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",21,null],[11,"position","","",21,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"motor","","",21,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[11,"min_position","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_position","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a cartesian constaint between two body parts.",22,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"isometry"},{"name":"isometry"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Changes the reference frame for the first body part.",22,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"set_anchor_2","","Changes the reference frame for the second body part.",22,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"num_velocity_constraints","","",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",22,null],[11,"velocity_constraints","","",22,null],[11,"cache_impulses","","",22,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",22,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",22,null],[11,"new","","Create a fixed constraint between two body parts.",23,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"isometry"},{"name":"isometry"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Changes the frame attached to the first body part.",23,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"set_anchor_2","","Changes the frame attached to the second body part.",23,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"num_velocity_constraints","","",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",23,null],[11,"velocity_constraints","","",23,null],[11,"cache_impulses","","",23,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",23,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",23,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a disable motor with zero desired velocity.",16,{"inputs":[],"output":{"name":"self"}}],[11,"impulse_limits","","The limits of the impulse applicable by the motor on the body parts.",16,{"inputs":[{"name":"self"}],"output":{"name":"impulselimits"}}],[11,"new","","Initialize a mouse constraint between two bodies.BodyHandle",24,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"name":"point"},{"name":"n"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Change the first anchor, expressed in the local space of the first body part.",24,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"set_anchor_2","","Change the first anchor, expressed in the local space of the second body part.",24,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"num_velocity_constraints","","",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",24,null],[11,"velocity_constraints","","",24,null],[11,"cache_impulses","","",24,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",24,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",24,null],[11,"new","","Create a new prismatic constraint that ensures the relative motion between the two body parts are restricted to a single translation along the `axis1` axis (expressed in the local coordinates frame of `b1`).",25,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"generics":["vector"],"name":"unit"},{"name":"point"}],"output":{"name":"self"}}],[11,"min_offset","","The lower limit, if any, of the relative translation (along the joint axis) of the body parts attached to this joint.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset","","The upper limit, if any, of the relative translation (along the joint axis) of the body parts attached to this joint.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset","","Disable the lower limit of the relative translational motion along the joint axis.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset","","Disable the upper limit of the relative translational motion along the joint axis.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset","","Enables the lower limit of the relative translational motion along the joint axis.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset","","Disable the lower limit of the relative translational motion along the joint axis.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"num_velocity_constraints","","",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",25,null],[11,"velocity_constraints","","",25,null],[11,"cache_impulses","","",25,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",25,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",25,null],[11,"new","","Create a new revolute constraint which ensures the provided anchors always coincide.",26,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"name":"point"}],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",26,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",26,null],[11,"velocity_constraints","","",26,null],[11,"cache_impulses","","",26,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",26,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",26,null],[6,"ConstraintHandle","","The handle of a consraint.",null,null],[8,"Joint","","Trait implemented by all joints following the reduced-coordinate formation.",null,null],[10,"ndofs","","The number of degrees of freedom allowed by the joint.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"body_to_parent","","The position of the multibody link containing this joint relative to its parent.",27,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[10,"update_jacobians","","Update the jacobians of this joint.",27,null],[10,"integrate","","Integrate the position of this joint.",27,null],[10,"apply_displacement","","Apply a displacement to the joint.",27,null],[10,"jacobian","","Sets in `out` the non-zero entries of the joint jacobian transformed by `transform`.",27,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[10,"jacobian_dot","","Sets in `out` the non-zero entries of the time-derivative of the joint jacobian transformed by `transform`.",27,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[10,"jacobian_dot_veldiff_mul_coordinates","","Sets in `out` the non-zero entries of the velocity-derivative of the time-derivative of the joint jacobian transformed by `transform`.",27,null],[10,"jacobian_mul_coordinates","","Multiply the joint jacobian by generalized velocities to obtain the relative velocity of the multibody link containing this joint.",27,null],[10,"jacobian_dot_mul_coordinates","","Multiply the joint jacobian by generalized accelerations to obtain the relative acceleration of the multibody link containing this joint.",27,null],[10,"default_damping","","Fill `out` with the non-zero entries of a damping that can be applied by default to ensure a good stability of the joint.",27,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"nimpulses","","The maximum number of impulses needed by this joints for its constraints.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"num_velocity_constraints","","Maximum number of velocity constrains that can be generated by this joint.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","Initialize and generate velocity constraints to enforce, e.g., joint limits and motors.",27,null],[11,"num_position_constraints","","The maximum number of non-linear position constraints that can be generated by this joint.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","Initialize and generate the i-th position constraints to enforce, e.g., joint limits.",27,null],[8,"UnitJoint","","Trait implemented by joints using the reduced-coordinates approach and allowing only one degree of freedom.",null,null],[10,"position","","The generalized coordinate of the unit joint.",28,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[10,"motor","","The motor applied to the degree of freedom of the unit joitn.",28,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[10,"min_position","","The lower limit, if any, set to the generalized coordinate of this unit joint.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"max_position","","The upper limit, if any, set to the generalized coordinate of this unit joint.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"JointConstraint","","Trait implemented by joint that operate by generating constraints to restrict the relative motion of two body parts.",null,null],[11,"is_active","","Return `true` if the constraint is active.",29,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"bool"}}],[10,"num_velocity_constraints","","The maximum number of velocity constraints generated by this joint.",29,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"anchors","","The two body parts affected by this joint.",29,null],[10,"velocity_constraints","","Initialize and retrieve all the constraints appied to the bodies attached to this joint.",29,null],[10,"cache_impulses","","Called after velocity constraint resolution, allows the joint to keep a cache of impulses generated for each constraint.",29,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[0,"object","nphysics2d","Objects that may be added to the physical world.",null,null],[3,"Material","nphysics2d::object","Description of the state of surface of a solid.",null,null],[12,"restitution","","Restitution coefficient of the surface.",30,null],[12,"friction","","Friction coefficient of the surface.",30,null],[3,"ActivationStatus","","The activation status of a body.",null,null],[3,"Bodies","","Iterator yielding all the bodies on a body set.",null,null],[3,"BodyHandle","","A unique identifier of a body added to the world.",null,null],[3,"BodySet","","A set containing all the bodies added to the world.",null,null],[3,"ColliderData","","Data stored into each collider.",null,null],[3,"Ground","","A singleton representing the ground.",null,null],[3,"Multibody","","An articulated body simulated using the reduced-coordinates approach.",null,null],[3,"MultibodyLinks","","Iterator through all the multibody links.",null,null],[3,"MultibodyWorkspace","","A temporary workspace for various updates of the multibody.",null,null],[3,"MultibodyLinkId","","The identifier of a multibody link.",null,null],[3,"MultibodyLinkMut","","Mutable reference to a multibody link.",null,null],[3,"MultibodyLinkRef","","A reference to a multibody link.",null,null],[3,"RigidBody","","A rigid body.",null,null],[4,"Body","","A body contained by the physics world.",null,null],[13,"RigidBody","","A rigid body.",31,null],[13,"Multibody","","A multibody.",31,null],[13,"Ground","","The ground.",31,null],[4,"BodyMut","","A mutable body contained by the physics world.",null,null],[13,"RigidBody","","A rigid body.",32,null],[13,"Multibody","","A multibody.",32,null],[13,"Ground","","The ground.",32,null],[4,"BodyPart","","A mutable body part contained by the physics world.",null,null],[13,"RigidBody","","A rigid body.",33,null],[13,"MultibodyLink","","A link of a multibody.",33,null],[13,"Ground","","The ground.",33,null],[4,"BodyPartMut","","A mutable body part contained by the physics world.",null,null],[13,"RigidBody","","A rigid body.",34,null],[13,"MultibodyLink","","A link of a multibody.",34,null],[13,"Ground","","The ground.",34,null],[4,"BodyStatus","","The status of a body.",null,null],[13,"Disabled","","The body is disabled and ignored by the physics engine.",35,null],[13,"Static","","The body is static and thus cannot move.",35,null],[13,"Dynamic","","The body is dynamic and thus can move and is subject to forces.",35,null],[13,"Kinematic","","The body is kinematic so its velocity is controlled by the user and it is not affected by forces and constraints.",35,null],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"material"}}],[11,"new","","Initialize a material with the specified restitution and friction coefficient.",30,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"bodystatus"}],"output":{"name":"bool"}}],[11,"hash","","",35,null],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_threshold","","The default amount of energy bellow which a body can be put to sleep by nphysics.",36,{"inputs":[],"output":{"name":"n"}}],[11,"new_active","","Create a new activation status initialised with the default activation threshold and is active.",36,{"inputs":[],"output":{"name":"self"}}],[11,"new_inactive","","Create a new activation status initialised with the default activation threshold and is inactive.",36,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","Retuns `true` if the body is not asleep.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"deactivation_threshold","","The threshold bellow which the body can be put to sleep.",36,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_deactivation_threshold","","Set the threshold bellow which the body can be put to sleep.",36,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"energy","","The current energy averaged through several frames.",36,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_energy","","Sets the current average energy of the body.",36,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_ground","","Checks if this body identifies the ground.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status_dependent_ndofs","","The number of degrees of freedom (DOF) of this body, taking its status into account.",31,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_ground","","Checks if this body identifies the ground.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status_dependent_ndofs","","The number of degrees of freedom (DOF) of this body, taking its status into account.",32,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"apply_displacement","","Applies a displacement to all the degrees of freedom of this body.",32,null],[11,"handle","","The handle of this body.",31,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"status","","The status of this body.",31,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"activation_status","","Informations regarding activation and deactivation (sleeping) of this body.",31,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"is_active","","Check if this body is active.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_dynamic","","Whether or not the status of this body is dynamic.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Whether or not the status of this body is kinematic.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Whether or not the status of this body is static.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ndofs","","The number of degrees of freedom of this body.",31,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"generalized_acceleration","","The generalized accelerations at each degree of freedom of this body.",31,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity","","The generalized velocities of this body.",31,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"companion_id","","The companion ID of this body.",31,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"handle","","The handle of this body.",32,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"status","","The status of this body.",32,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"activation_status","","Informations regarding activation and deactivation (sleeping) of this body.",32,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"is_active","","Check if this body is active.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Whether or not the status of this body is kinematic.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Whether or not the status of this body is static.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ndofs","","The number of degrees of freedom of this body.",32,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"generalized_acceleration","","The generalized accelerations at each degree of freedom of this body.",32,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity","","The generalized velocities of this body.",32,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"companion_id","","The companion ID of this body.",32,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_companion_id","","Set the companion ID of this body (may be reinitialized by nphysics).",32,null],[11,"generalized_velocity_mut","","The mutable generalized velocities of this body.",32,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"integrate","","Integrate the position of this body.",32,null],[11,"activate","","Force the activation of this body.",32,null],[11,"activate_with_energy","","Force the activation of this body with the given level of energy.",32,null],[11,"deactivate","","Put this body to sleep.",32,null],[11,"is_ground","","Returns `true` if this body is the ground.",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"handle","","The handle of this body.",33,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"parent_ndofs","","The number of degrees of freedom of the body containing this body part.",33,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"parent_companion_id","","The companion ID of the parent of this body part.",33,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_active","","Check if this body part is active.",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status_dependent_parent_ndofs","","The number of degrees of freedom (DOF) of the body containing this body part, taking its status into account.",33,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"parent_generalized_velocity","","The generalized velocities of the body containing this body part.",33,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"center_of_mass","","The center of mass of this body part.",33,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"position","","The position of this body part wrt. the ground.",33,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"velocity","","The velocity of this body part.",33,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"inertia","","The world-space inertia of this body part.",33,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"local_inertia","","The local-space inertia of this body part.",33,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"status_dependent_velocity","","The velocity of this body part, taking it status into account.",33,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"body_jacobian_mul_force","","Convert a force applied to the center of mass of this body part into generalized force.",33,null],[11,"inv_mass_mul_generalized_forces","","Convert generalized forces applied to this body part into generalized accelerations.",33,null],[11,"inv_mass_mul_force","","Convert a force applied to this body part's center of mass into generalized accelerations.",33,null],[11,"as_ref","","Retrieves an immutable reference to this body part.",34,{"inputs":[{"name":"self"}],"output":{"name":"bodypart"}}],[11,"apply_force","","Apply a force to this body part at the next frame.",34,{"inputs":[{"name":"self"},{"name":"force"}],"output":null}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"ground","","The unique identifier of the ground.",37,{"inputs":[],"output":{"name":"self"}}],[11,"is_ground","","Tests if this handle corresponds to the ground.",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Create a new empty set of bodies.",38,{"inputs":[],"output":{"name":"self"}}],[11,"len","","The number of bodies in this set.",38,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"are_same_body","","Check if the two given handles identify the same body.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"},{"name":"bodyhandle"}],"output":{"name":"bool"}}],[11,"update_kinematics","","Update the kinematics of all the bodies.",38,{"inputs":[{"name":"self"}],"output":null}],[11,"clear_dynamics","","Clear the dynamics of all the bodies.",38,{"inputs":[{"name":"self"}],"output":null}],[11,"update_dynamics","","Update the dynamics of all the bodies.",38,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"integrationparameters"},{"name":"multibodyworkspace"}],"output":null}],[11,"add_rigid_body","","Add a rigid body to the set and return its handle.",38,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"inertia"},{"name":"point"}],"output":{"name":"bodyhandle"}}],[11,"add_multibody_link","","Add a multibody link to the set and return its handle.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"},{"name":"j"},{"name":"vector"},{"name":"vector"},{"name":"inertia"},{"name":"point"}],"output":{"name":"bodyhandle"}}],[11,"remove_body","","Remove a body from this set.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":null}],[11,"remove_multibody_links","","Remove some multibody links.",38,null],[11,"contains","","Checks that the given handle identifies a valid body part.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bool"}}],[11,"body","","Reference to the body identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"body"}}],[11,"body_mut","","Mutable reference to the body identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodymut"}}],[11,"body_part","","Reference to the body part identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodypart"}}],[11,"body_part_mut","","Mutable reference to the body part identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodypartmut"}}],[11,"multibody","","Reference to the multibody containing the multibody link identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibody"],"name":"option"}}],[11,"multibody_mut","","Mutable reference to the multibody containing the multibody link identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibody"],"name":"option"}}],[11,"multibody_link","","Reference to the multibody link identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibodylinkref"],"name":"option"}}],[11,"multibody_link_mut","","Mutable reference to the multibody link identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibodylinkmut"],"name":"option"}}],[11,"rigid_body","","Reference to the rigid body identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["rigidbody"],"name":"option"}}],[11,"rigid_body_mut","","Mutable reference to the rigid body identified by `body`.",38,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["rigidbody"],"name":"option"}}],[11,"rigid_bodies","","Iterator yielding all the rigid bodies on this set.",38,{"inputs":[{"name":"self"}],"output":{"generics":["iter"],"name":"map"}}],[11,"rigid_bodies_mut","","Mutable iterator yielding all the rigid bodies on this set.",38,{"inputs":[{"name":"self"}],"output":{"generics":["itermut"],"name":"map"}}],[11,"multibodies","","Iterator yielding all the multibodies on this set.",38,{"inputs":[{"name":"self"}],"output":{"generics":["iter"],"name":"map"}}],[11,"multibodies_mut","","Mutable iterator yielding all the multibodies on this set.",38,{"inputs":[{"name":"self"}],"output":{"generics":["itermut"],"name":"map"}}],[11,"bodies_mut","","Mutable iterator yielding all the bodies on this set.",38,{"inputs":[{"name":"self"}],"output":{"name":"bodiesmut"}}],[11,"next","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["body"],"name":"option"}}],[11,"new","","Initializes data for a collider.",40,{"inputs":[{"name":"n"},{"name":"bodyhandle"},{"name":"usize"},{"name":"isometry"},{"name":"material"}],"output":{"name":"self"}}],[11,"body","","The handle of the body part this collider is attached to.",40,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"margin","","The collision margin surrounding this collider.",40,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"position_wrt_body","","The position of the collider relative to the body it is attached to.",40,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"material","","The material of this collider.",40,{"inputs":[{"name":"self"}],"output":{"name":"material"}}],[11,"handle","","The handle of the ground.",41,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"activation_status","","An inactive status.",41,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activate","","Does nothing.",41,{"inputs":[{"name":"self"}],"output":null}],[11,"activate_with_energy","","Does nothing.",41,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"deactivate","","Does nothing.",41,{"inputs":[{"name":"self"}],"output":null}],[11,"is_active","","Returns `false`.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_dynamic","","Returns `false`.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Returns `false`.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Returns `true`.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status","","Returns `BodyStatus::Static`.",41,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"companion_id","","The companion ID of the ground.",41,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_companion_id","","Sets the companion ID of the ground.",41,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"ndofs","","Returns 0.",41,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"generalized_velocity","","Returns an empty slice.",41,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity_mut","","Returns an empty slice.",41,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"generalized_acceleration","","Returns an empty slice.",41,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"integrate","","Does nothing.",41,{"inputs":[{"name":"self"},{"name":"integrationparameters"}],"output":null}],[11,"center_of_mass","","Returns the origin.",41,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"position","","Returns the identity.",41,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"velocity","","Returns zero.",41,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"inertia","","Returns zero.",41,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"local_inertia","","Returns zero.",41,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"body_jacobian_mul_force","","Does nothing.",41,null],[11,"inv_mass_mul_generalized_forces","","Does nothing.",41,null],[11,"inv_mass_mul_force","","Does nothing.",41,null],[11,"apply_force","","Does nothing.",41,{"inputs":[{"name":"self"},{"name":"force"}],"output":null}],[11,"new","","Creates a new multibody with no link.",42,{"inputs":[],"output":{"name":"self"}}],[11,"handle","","The handle of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"activation_status","","Informations regarding activation and deactivation (sleeping) of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activation_status_mut","","Mutable informations regarding activation and deactivation (sleeping) of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activate","","Force the activation of this multibody link.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"activate_with_energy","","Force the activation of this multibody link with the given level of energy.",42,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"deactivate","","Put this multibody to sleep.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"is_active","","Return `true` if this multibody is kinematic or dynamic and awake.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status","","The status of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"set_status","","Set the status of this body.",42,{"inputs":[{"name":"self"},{"name":"bodystatus"}],"output":null}],[11,"companion_id","","The companion ID of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_companion_id","","Set the companion ID of this multibody.",42,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"is_dynamic","","Whether or not the status of this multibody is dynamic.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Whether or not the status of this multibody is static.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Whether or not the status of this multibody is kinematic.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ndofs","","The total number of degrees of freedom of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"links","","Iterator through all the links of this multibody.alloc_jemalloc",42,{"inputs":[{"name":"self"}],"output":{"name":"multibodylinks"}}],[11,"link","","Get a reference to a specific multibody link.",42,{"inputs":[{"name":"self"},{"name":"multibodylinkid"}],"output":{"name":"multibodylinkref"}}],[11,"link_mut","","Get a mutable reference to a specific multibody link.",42,{"inputs":[{"name":"self"},{"name":"multibodylinkid"}],"output":{"name":"multibodylinkmut"}}],[11,"generalized_velocity","","The vector of generalized velocities of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity_slice","","The slice of generalized velocities of this multibody.",42,null],[11,"generalized_velocity_mut","","The mutable vector of generalized velocities of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"generalized_velocity_slice_mut","","The mutable slice of generalized velocities of this multibody.",42,null],[11,"generalized_acceleration","","The vector of generalized accelerations of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"damping","","The vector of damping applied to this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"damping_mut","","Mutable vector of damping applied to this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"impulses","","Generalized impulses applied to each degree of freedom.",42,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"remove_links","","Remove a set of links from this multibody.",42,null],[11,"integrate","","Integrate the position of all the links of this multibody.",42,{"inputs":[{"name":"self"},{"name":"integrationparameters"}],"output":null}],[11,"apply_displacement","","Apply a displacement to each degrees of freedom of this multibody.",42,null],[11,"clear_dynamics","","Reset the timestep-specific dynamic information of this multibody.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"update_kinematics","","Updates the positions of the rigid bodies.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"update_dynamics","","Computes the constant terms of the dynamics.",42,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"integrationparameters"},{"name":"multibodyworkspace"}],"output":null}],[11,"body_jacobian_mul_force","","Convert a force applied to the center of mass of the link `rb_id` into generalized force.",42,null],[11,"inv_mass_mul_generalized_forces","","Convert generalized forces applied to this multibody into generalized accelerations.",42,null],[11,"inv_mass_mul_force","","Convert a force applied to this multibody's link `rb_id` center of mass into generalized accelerations.",42,null],[11,"inv_mass_mul_unit_joint_force","","Convert a generalized force applied to le link `rb_id`'s degrees of freedom into generalized accelerations.",42,null],[11,"inv_mass_mul_joint_force","","Convert a generalized force applied to the link `rb_id`'s degrees of freedom into generalized accelerations.",42,null],[11,"augmented_mass","","The augmented mass (inluding gyroscropic and coriolis terms) in world-space of this multibody.",42,{"inputs":[{"name":"self"}],"output":{"name":"dmatrix"}}],[11,"constraints","","Generates the set of velocity and position constraints needed for joint limits and motors at each link of this multibody.",42,null],[11,"cache_impulses","","Store impulses computed by the solver for joint limits and motors.",42,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"next","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["multibodylinkref"],"name":"option"}}],[11,"new","","Create an empty workspace.",44,{"inputs":[],"output":{"name":"self"}}],[11,"resize","","Resize the workspace so it is enough for `nlinks` links.",44,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"multibodylinkid"}}],[11,"hash","","",45,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"multibodylinkid"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"multibodylinkid"}],"output":{"name":"bool"}}],[11,"ground","","The multibody link identifying the ground.",45,{"inputs":[],"output":{"name":"self"}}],[11,"is_root","","Return `true` if this link is at the root of the multibody.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_ground","","Return `true` if this link identifies the ground.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Creates a new mutable reference of a multibody link.",46,{"inputs":[{"name":"multibodylinkid"},{"name":"multibody"}],"output":{"name":"self"}}],[11,"handle","","The handle of this link.",46,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"as_ref","","Retrieve an immutable reference to this link.",46,{"inputs":[{"name":"self"}],"output":{"name":"multibodylinkref"}}],[11,"joint_mut","","Mutable reference to the joint attaching this link to its parent.",46,{"inputs":[{"name":"self"}],"output":{"name":"joint"}}],[11,"apply_force","","Apply a force to this link.",46,{"inputs":[{"name":"self"},{"name":"force"}],"output":null}],[11,"joint_velocity_mut","","Retriev the mutable generalized velocities of this link.",46,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"new","","Create a new reference to a multibody link.",47,{"inputs":[{"name":"multibodylinkid"},{"name":"multibody"}],"output":{"name":"self"}}],[11,"handle","","The handle of this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"joint","","Reference to the joint attaching this link to its parent.",47,{"inputs":[{"name":"self"}],"output":{"name":"joint"}}],[11,"center_of_mass","","Center of mass of this link wrt. the ground.",47,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"velocity","","Velocity at the center of mass of this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"joint_velocity","","Generalized velocities of this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"id","","The identifier of this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"multibodylinkid"}}],[11,"assembly_id","","The dynamic assembly identifier of this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"impulse_id","","The impulse cache identifier of this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"multibody","","Reference to the multibody containing this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"multibody"}}],[11,"inv_mass_mul_unit_joint_force","","Convert a generalized force applied to this link degrees of freedom into generalized accelerations.",47,null],[11,"inv_mass_mul_joint_force","","Convert a generalized force applied to this link degrees of freedom into generalized accelerations.",47,null],[11,"position","","The position of the center of mass of this link wrt. the ground.",47,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"body_jacobian_mul_force","","Convert a force applied to this link center of mass into generalized force.",47,null],[11,"inv_mass_mul_generalized_forces","","Convert generalized forces applied to the multibody containing this link into generalized accelerations.",47,null],[11,"inv_mass_mul_force","","Convert a force applied to this link's center of mass into generalized accelerations.",47,null],[11,"local_inertia","","The local inertia of this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"inertia","","The world-space inertia of this link.",47,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"new","","Create a new rigid body with the specified handle and dynamic properties.",48,{"inputs":[{"name":"bodyhandle"},{"name":"isometry"},{"name":"inertia"},{"name":"point"}],"output":{"name":"self"}}],[11,"activation_status","","Informations regarding activation and deactivation (sleeping) of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activation_status_mut","","Mutable informations regarding activation and deactivation (sleeping) of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activate","","Force the activation of this rigid body.",48,{"inputs":[{"name":"self"}],"output":null}],[11,"activate_with_energy","","Force the activation of this rigid body with the given level of energy.",48,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"deactivate","","Put this rigid body to sleep.",48,{"inputs":[{"name":"self"}],"output":null}],[11,"is_active","","Return `true` if this rigid body is kinematic or dynamic and awake.",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status","","The status of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"set_status","","Set the status of this body.",48,{"inputs":[{"name":"self"},{"name":"bodystatus"}],"output":null}],[11,"companion_id","","The companion ID of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_companion_id","","Set the companion ID of this rigid body.",48,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"is_dynamic","","Whether or not the status of this rigid body is dynamic.",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Whether or not the status of this rigid body is static.",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Whether or not the status of this rigid body is kinematic.",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"center_of_mass","","The center of mass of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"velocity","","The velocity of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"set_velocity","","Set the velocity of this rigid body.",48,{"inputs":[{"name":"self"},{"name":"velocity"}],"output":null}],[11,"set_linear_velocity","","Set the linear velocity of this rigid body.",48,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"set_angular_velocity","","Set the angular velocity of this rigid body.",48,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"clear_dynamics","","Reset the timestep-specific dynamic information of this rigid body.",48,{"inputs":[{"name":"self"}],"output":null}],[11,"update_dynamics","","Update the timestep-specific dynamic information of this rigid body.",48,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"integrationparameters"}],"output":null}],[11,"local_inertia","","The rigid body inertia in local-space.",48,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"inertia","","The rigid body inertia in world-space.",48,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"augmented_mass","","The augmented mass (inluding gyroscropic terms) in world-space of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"handle","","The handle of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"ndofs","","The number of degrees of freedom of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"generalized_velocity","","The generalized velocities of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity_mut","","The mutable generalized velocities of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"generalized_acceleration","","The generalized accelerations at each degree of freedom of this rigid body.",48,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"integrate","","Integrate the position of this rigid body.",48,{"inputs":[{"name":"self"},{"name":"integrationparameters"}],"output":null}],[11,"apply_displacement","","Apply a displacement to this rigid body.",48,{"inputs":[{"name":"self"},{"name":"velocity"}],"output":null}],[11,"apply_force","","Apply a force to this rigid body for the next timestep.",48,{"inputs":[{"name":"self"},{"name":"force"}],"output":null}],[11,"position","","The position of this rigid body wrt. the ground.",48,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"body_jacobian_mul_force","","Convert a force applied to this rigid body center of mass into generalized force.",48,null],[11,"inv_mass_mul_generalized_forces","","Convert generalized forces applied to this rigid body into generalized accelerations.",48,null],[11,"inv_mass_mul_force","","Convert a force applied to this rigid body's center of mass into generalized accelerations.",48,null],[6,"Collider","","Type of a collider.",null,null],[6,"ColliderHandle","","Type of the handle of a collider.",null,null],[6,"Colliders","","Type of a reference to a collider.",null,null],[6,"Sensor","","Type of a sensor.",null,null],[6,"SensorHandle","","Type of the handle of a sensor.",null,null],[0,"solver","nphysics2d","Constraint solver.",null,null],[3,"MoreauJeanSolver","nphysics2d::solver","Moreau-Jean time-stepping scheme.",null,null],[3,"BilateralConstraint","","A bilateral (equality) constraint between two bodies.",null,null],[12,"impulse","","The impulse applied by this constraint.",49,null],[12,"r","","The scaling parameter of the SOR-prox method.",49,null],[12,"rhs","","The target velocity change this constraint must apply.",49,null],[12,"limits","","Limits of impulse applicable by this constraint.",49,null],[12,"impulse_id","","The index of the impulse used for its storage in an impuse cache.",49,null],[12,"assembly_id1","","The assembly index of the first body.",49,null],[12,"assembly_id2","","The assembly index of the second body.",49,null],[12,"j_id1","","Index of the first entry of the jacobian of the constraint affecting the first body.",49,null],[12,"j_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",49,null],[12,"wj_id1","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the first body.",49,null],[12,"wj_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",49,null],[12,"ndofs1","","Number of degree of freedom of the first body.",49,null],[12,"ndofs2","","Number of degree of freedom of the second body.",49,null],[3,"BilateralGroundConstraint","","A bilateral (equality) constraint between a dynamic body and one without any degrees of freedom.",null,null],[12,"impulse","","The impulse applied by the constraint.",50,null],[12,"r","","The scaling parameter used by the SOR-prox method.",50,null],[12,"rhs","","The target velocity change this constraint must apply.",50,null],[12,"limits","","Limits of impulse applicable by this constraint.",50,null],[12,"impulse_id","","The index of the impulse used for its storage in an impuse cache.",50,null],[12,"assembly_id","","The assembly index of the dynamic body.",50,null],[12,"j_id","","Index of the first entry of the jacobian of the constraint affecting the dynamic body.",50,null],[12,"wj_id","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the dynamic body.",50,null],[12,"ndofs","","Number of degree of freedom of the dynamic body.",50,null],[3,"ConstraintGeometry","","Logical information of the geometry of a constraint.",null,null],[12,"j_id1","","Index of the first entry of the jacobian of the constraint affecting the first body.",51,null],[12,"j_id2","","Index of the first entry of the jacobian of the constraint affecting the second body.",51,null],[12,"wj_id1","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the first body.",51,null],[12,"wj_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",51,null],[12,"ndofs1","","Number of degree of freedom of the first body.",51,null],[12,"ndofs2","","Number of degree of freedom of the second body.",51,null],[12,"r","","Scaling parameter of the SOR-prox method.",51,null],[3,"UnilateralConstraint","","A unilateral (inequality) consraint.",null,null],[12,"impulse","","The impulse applied by this constraint.",52,null],[12,"r","","The scaling parameter of the SOR-prox method.",52,null],[12,"rhs","","The target velocity change this constraint must apply.",52,null],[12,"impulse_id","","The index of the impulse used for its storage in an impuse cache.",52,null],[12,"assembly_id1","","The assembly index of the first body.",52,null],[12,"assembly_id2","","The assembly index of the second body.",52,null],[12,"j_id1","","Index of the first entry of the jacobian of the constraint affecting the first body.",52,null],[12,"j_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",52,null],[12,"wj_id1","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the first body.",52,null],[12,"wj_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",52,null],[12,"ndofs1","","Number of degree of freedom of the first body.",52,null],[12,"ndofs2","","Number of degree of freedom of the second body.",52,null],[3,"UnilateralGroundConstraint","","A unilateral (inequality) constraint between a dynamic body and one without any degrees of freedom.",null,null],[12,"impulse","","The impulse applied by the constraint.",53,null],[12,"r","","The scaling parameter used by the SOR-prox method.",53,null],[12,"rhs","","The target velocity change this constraint must apply.",53,null],[12,"impulse_id","","The index of the impulse used for its storage in an impuse cache.",53,null],[12,"assembly_id","","The assembly index of the dynamic body.",53,null],[12,"j_id","","Index of the first entry of the jacobian of the constraint affecting the dynamic body.",53,null],[12,"wj_id","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the dynamic body.",53,null],[12,"ndofs","","Number of degree of freedom of the dynamic body.",53,null],[3,"GenericNonlinearConstraint","","A generic non-linear position constraint.",null,null],[12,"body1","","The first body affected by the constraint.",54,null],[12,"body2","","The second body affected by the constraint.",54,null],[12,"is_angular","","Whether this constraint affects the bodies translation or orientation.",54,null],[12,"dim1","","Number of degree of freedom of the first body.",54,null],[12,"dim2","","Number of degree of freedom of the second body.",54,null],[12,"wj_id1","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the first body.",54,null],[12,"wj_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",54,null],[12,"rhs","","The target position change this constraint must apply.",54,null],[12,"r","","The scaling parameter of the SOR-prox method.",54,null],[3,"MultibodyJointLimitsNonlinearConstraintGenerator","","A non-linear position constraint generator to enforce multibody joint limits.",null,null],[3,"NonlinearUnilateralConstraint","","A non-linear position-based non-penetration constraint.",null,null],[12,"r","","The scaling parameter of the SOR-prox method.",55,null],[12,"rhs","","The target position change this constraint must apply.",55,null],[12,"ndofs1","","Number of degree of freedom of the first body.",55,null],[12,"body1","","The first body affected by the constraint.",55,null],[12,"ndofs2","","Number of degree of freedom of the second body.",55,null],[12,"body2","","The second body affected by the constraint.",55,null],[12,"kinematic","","The kinematic information used to update the contact location.",55,null],[12,"normal1","","The contact normal on the local space of `self.body1`.",55,null],[12,"normal2","","The contact normal on the local space of `self.body1`.",55,null],[3,"SignoriniCoulombPyramidModel","","A contact model generating one non-penetration constraint and two friction constraints per contact.",null,null],[3,"SignoriniModel","","A contact model generating one non-penetration constraint per contact.",null,null],[3,"IntegrationParameters","","Parameters for a time-step of the physics engine.",null,null],[12,"dt","","The timestep (default: `1.0 / 60.0`)",56,null],[12,"erp","","The Error Reduction Parameter in `[0, 1]` is the proportion of the positional error to be corrected at each time step (default: `0.2`).",56,null],[12,"warmstart_coeff","","Each cached impulse are multiplied by this coefficient in `[0, 1]` when they are re-used to initialize the solver (default `1.0`).",56,null],[12,"restitution_velocity_threshold","","Contacts at points where the involved bodies have a relative velocity smaller than this threshold wont be affected by the restitution force (default: `1.0`).",56,null],[12,"allowed_linear_error","","Ammount of penetration the engine wont attempt to correct (default: `0.001m`).",56,null],[12,"allowed_angular_error","","Ammount of angular drift of joint limits the engine wont attempt to correct (default: `0.001rad`).",56,null],[12,"max_linear_correction","","Maximum linear correction during one step of the non-linear position solver (default: `100.0`).",56,null],[12,"max_angular_correction","","Maximum angular correction during one step of the non-linear position solver (default: `0.2`).",56,null],[12,"max_stabilization_multiplier","","Maximum nonlinera SOR-prox scaling parameter when the constraint correction direction is close to the kernel of the involved multibody's jacobian (default: `0.2`).",56,null],[12,"max_velocity_iterations","","Maximum number of iterations performed by the velocity constraints solver.",56,null],[12,"max_position_iterations","","Maximum number of iterations performed by the position-based constraints solver.",56,null],[3,"ImpulseCache","","A cache for impulses.",null,null],[3,"ConstraintSet","","A set of all velocity constraints and non-linear position-based constraints.",null,null],[12,"velocity","","The velocity constraints constructed.",57,null],[12,"position","","The position constraints constructed.",57,null],[3,"SORProx","","A SOR-Prox velocity-based constraints solver.",null,null],[3,"NonlinearSORProx","","Non-linear position-based consraint solver using the SOR-Prox approach.",null,null],[4,"ImpulseLimits","","Limits of impulse applicable by a bilateral constraint.",null,null],[13,"Independent","","Limits that are absolute threshold.",58,null],[12,"min","nphysics2d::solver::ImpulseLimits","The lower bound of the impulse.",58,null],[12,"max","","The upper bound of the impulse.",58,null],[13,"Dependent","nphysics2d::solver","Limit proportional to the impulse of another unilateral constraint.",58,null],[12,"dependency","nphysics2d::solver::ImpulseLimits","Index of the unilateral constraint which this limit depends on.",58,null],[12,"coeff","","The coefficient by which the dependent impulse is multiplied to obtain the impulse limit.",58,null],[0,"helper","nphysics2d::solver","Utilities for computing velocity and position constraints.",null,null],[4,"ForceDirection","nphysics2d::solver::helper","The direction of a force.",null,null],[13,"Linear","","A linear force toward a direction.",59,null],[13,"Angular","","A torque wrt. an axis.",59,null],[5,"fill_constraint_geometry","","Fills all the jacobians (and the jacobians multiplied by the invers augmented mass matricxs) for a constraint applying a force at the point `center` (relative to the body part's center of mass) and the direction `dir`.",null,null],[5,"constraint_pair_geometry","","Fills all the jacobians (and the jacobians multiplied by the invers augmented mass matricxs) for a constraint applying a force at the points `center1, center2` and the direction `dir`.",null,null],[5,"constraint_pair_velocity","","Compute the generalized relative velocity for at the given points and along a given direction.",null,null],[5,"constraints_are_ground_constraints","","Test sif a constraint between the two given bodies should be a ground constraint (a constraint between a dynamic body and one without any degree of freedom).",null,{"inputs":[{"name":"bodypart"},{"name":"bodypart"}],"output":{"name":"bool"}}],[5,"cancel_relative_linear_velocity_wrt_axis","","Generates velocity constraints to cancel the relative linear velocity of two body parts wrt the given axis.",null,null],[5,"cancel_relative_linear_velocity","","Generates velocity constraints to cancel the relative linear velocity of two body parts.",null,null],[5,"cancel_relative_translation_wrt_axis","","Generate position constraints to cancel the relative translation of two bodies wrt the given axis.",null,null],[5,"cancel_relative_translation","","Generate position constraints to cancel the relative translation of two bodies.",null,null],[5,"cancel_relative_angular_velocity_wrt_axis","","Generate velocity constraints to cancel the relative angular velocity of two bodies wrt. the given axis.",null,null],[5,"cancel_relative_angular_velocity","","Generate velocity constraints to cancel the relative angular velocity of two bodies.",null,null],[5,"cancel_relative_rotation","","Generate position constraints to cancel the relative rotation of two bodies.",null,null],[5,"restrict_relative_linear_velocity_to_axis","","Generate velocity constraints to cancel the relative linear velocity of two bodies along all axis except the one provided.",null,null],[5,"project_anchor_to_axis","","Generate position constraints to project `anchor2` into the axis with direction `axis1` and passing through the `anchor1`.",null,null],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"forcedirection"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"neg","","",59,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"new","nphysics2d::solver","Create a new empty cache.",60,{"inputs":[],"output":{"name":"self"}}],[11,"clear","","Clear the cache.",60,{"inputs":[{"name":"self"}],"output":null}],[11,"contains","","Test if the cache already contains the specified contact.",60,{"inputs":[{"name":"self"},{"name":"generationalid"}],"output":{"name":"bool"}}],[11,"get","","Get the impulse stored for the specified contact.",60,{"inputs":[{"name":"self"},{"name":"generationalid"}],"output":{"name":"n"}}],[11,"entry_id","","Retrieve the index on the cache vector associated to the given contact.",60,{"inputs":[{"name":"self"},{"name":"generationalid"}],"output":{"name":"usize"}}],[11,"index","","",60,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"index_mut","","",60,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"new","","Create a new time-stepping scheme with the given contact model.",61,{"inputs":[{"generics":["contactmodel"],"name":"box"}],"output":{"name":"self"}}],[11,"set_contact_model","","Sets the contact model.",61,{"inputs":[{"name":"self"},{"generics":["contactmodel"],"name":"box"}],"output":null}],[11,"step","","Perform one step of the time-stepping scheme.",61,null],[11,"new","","Creates a set of integration parameters with the given values.",56,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Initialize a new signorini-coulomb-pyramid contact model.",62,{"inputs":[],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",62,{"inputs":[{"name":"self"},{"name":"collidercontactmanifold"}],"output":{"name":"usize"}}],[11,"constraints","","",62,null],[11,"cache_impulses","","",62,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"new","","Create a new signorini contact model.",63,{"inputs":[],"output":{"name":"self"}}],[11,"build_velocity_constraint","","Build a non-penetration velocity-based constraint for the given contact.",63,null],[11,"is_constraint_active","","Checks if the given constraint is active.",63,{"inputs":[{"name":"trackedcontact"},{"name":"collidercontactmanifold"}],"output":{"name":"bool"}}],[11,"build_position_constraint","","Builds non-linear position-based non-penetration constraints for the given contact manifold.",63,{"inputs":[{"name":"bodyset"},{"name":"collidercontactmanifold"},{"name":"trackedcontact"},{"name":"constraintset"}],"output":null}],[11,"num_velocity_constraints","","",63,{"inputs":[{"name":"self"},{"name":"collidercontactmanifold"}],"output":{"name":"usize"}}],[11,"constraints","","",63,null],[11,"cache_impulses","","",63,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"constraintgeometry"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a costraint geometry initialized to zero.",51,{"inputs":[],"output":{"name":"self"}}],[11,"is_ground_constraint","","Return `true` if this constraint involve a body with zero degrees of freedom.",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Create a new unilateral constraint.",52,{"inputs":[{"name":"constraintgeometry"},{"name":"usize"},{"name":"usize"},{"name":"n"},{"name":"n"},{"name":"usize"}],"output":{"name":"self"}}],[11,"new","","Create a new unilateral ground constraint.",53,{"inputs":[{"name":"constraintgeometry"},{"name":"usize"},{"name":"usize"},{"name":"n"},{"name":"n"},{"name":"usize"}],"output":{"name":"self"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"impulselimits"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new bilateral constraint.",49,{"inputs":[{"name":"constraintgeometry"},{"name":"usize"},{"name":"usize"},{"name":"impulselimits"},{"name":"n"},{"name":"n"},{"name":"usize"}],"output":{"name":"self"}}],[11,"new","","Create a new unilateral ground constraint.",50,{"inputs":[{"name":"constraintgeometry"},{"name":"usize"},{"name":"usize"},{"name":"impulselimits"},{"name":"n"},{"name":"n"},{"name":"usize"}],"output":{"name":"self"}}],[11,"new","","Initialize a new nonlinear constraint.",54,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"bool"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Create a new nonlinear position-based non-penetration constraint.",55,{"inputs":[{"name":"bodyhandle"},{"name":"usize"},{"name":"bodyhandle"},{"name":"usize"},{"generics":["vector"],"name":"unit"},{"generics":["vector"],"name":"unit"},{"name":"contactkinematic"}],"output":{"name":"self"}}],[11,"new","","Creates the constraint generator from the given multibody link.",64,{"inputs":[{"name":"bodyhandle"}],"output":{"name":"self"}}],[11,"num_position_constraints","","",64,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",64,null],[11,"new","","Create a new empty set of constraints.",57,{"inputs":[],"output":{"name":"self"}}],[11,"len","","The total number of constraints on this set.",57,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clear","","Remove all constraints from this set.",57,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Initialize a new velocity-based constraints solver.",65,{"inputs":[],"output":{"name":"self"}}],[11,"solve","","Solve the given set of constraints.",65,null],[11,"new","","Initialize a new nonlinear SOR-Prox solver.",66,{"inputs":[],"output":{"name":"self"}}],[11,"solve","","Solve a set of nonlinear position-based constraints.",66,null],[8,"NonlinearConstraintGenerator","","Implemented by structures that generate non-linear constraints.",null,null],[10,"num_position_constraints","","Maximum of non-linear position constraint this generater needs to output.",67,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[10,"position_constraint","","Generate the `i`-th position constraint of this generator.",67,null],[8,"ContactModel","","The modeling of a contact.",null,null],[10,"num_velocity_constraints","","Maximum number of velocity constraint to be generated for each contact.",68,{"inputs":[{"name":"self"},{"name":"collidercontactmanifold"}],"output":{"name":"usize"}}],[10,"constraints","","Generate all constraints for the given contact manifolds.",68,null],[10,"cache_impulses","","Stores all the impulses found by the solver into a cache for warmstarting.",68,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[0,"utils","nphysics2d","Miscellaneous utilities.",null,null],[3,"DeterministicState","nphysics2d::utils","A hasher builder that creates `DefaultHasher` with default keys.",null,null],[0,"union_find","","The union find algorithm.",null,null],[3,"UnionFindSet","nphysics2d::utils::union_find","An element used by the union-find algorithm.",null,null],[5,"find","","Performs the `find` part of the union-find algorithm.",null,null],[5,"union","","Performs the `union` part of the union-find algorithm.",null,null],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"unionfindset"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",69,null],[11,"new","","Creates a new `UnionFindSet`.",69,{"inputs":[{"name":"usize"}],"output":{"name":"unionfindset"}}],[11,"reinit","","Reinitialize this set.",69,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"new","nphysics2d::utils","Creates a new `DeterministicState` that builds `DefaultHasher` with default keys.",70,{"inputs":[],"output":{"name":"deterministicstate"}}],[11,"build_hasher","","",70,{"inputs":[{"name":"self"}],"output":{"name":"defaulthasher"}}],[8,"GeneralizedCross","","This is a non-standard generalization of the cross product design exclusively to group the 3D cross product and the 2D perpendicular product behind the same interface.",null,null],[16,"Rhs","","The right-hand-side of this cross product.",71,null],[16,"CrossVector","","The result type of the this (non-standard) generalized cross product.",71,null],[16,"CrossMatrix","","The matrix representation of this (non-standard) generalized cross product.",71,null],[16,"CrossMatrixTr","","The transposed matrix representation of this (non-standard) generalized cross product.",71,null],[10,"gcross","","Computes this (non-standard) generalized cross product.",71,null],[10,"gcross_matrix","","Computes the matrix represenattion of this (non-standard) generalized cross product.",71,null],[10,"gcross_matrix_tr","","Computes the transposed matrix represenattion of this (non-standard) generalized cross product.",71,null],[8,"IndexMut2","","Methods for simultaneously indexing a container with two distinct indices.",null,null],[10,"index_mut2","","Gets mutable references to two distinct elements of the container.",72,null],[11,"index_mut_const","","Gets a mutable reference to one element, and immutable reference to a second one.",72,null],[0,"volumetric","nphysics2d","Volume and inertia tensor computation.",null,null],[5,"ball_area","nphysics2d::volumetric","The area of a ball.",null,{"inputs":[{"name":"n"}],"output":{"name":"n"}}],[5,"ball_center_of_mass","","The center of mass of a ball.",null,{"inputs":[],"output":{"name":"point"}}],[5,"ball_unit_angular_inertia","","The unit angular inertia of a ball.",null,{"inputs":[{"name":"n"}],"output":{"name":"angularinertia"}}],[5,"ball_volume","","The volume of a ball.",null,{"inputs":[{"name":"n"}],"output":{"name":"n"}}],[5,"cuboid_area","","The area of a cuboid.",null,{"inputs":[{"name":"vector"}],"output":{"name":"n"}}],[5,"cuboid_center_of_mass","","The center of mass of a cuboid.",null,{"inputs":[],"output":{"name":"point"}}],[5,"cuboid_unit_angular_inertia","","The unit angular inertia of a cuboid.",null,{"inputs":[{"name":"vector"}],"output":{"name":"angularinertia"}}],[5,"cuboid_volume","","The volume of a cuboid.",null,{"inputs":[{"name":"vector"}],"output":{"name":"n"}}],[5,"convex_hull_area","","The area of a convex hull.",null,null],[5,"convex_hull_center_of_mass","","The center of mass of the convex hull of a set of points.",null,null],[5,"convex_hull_unit_angular_inertia","","The angular inertia of the convex hull of a set of points.",null,null],[5,"convex_hull_volume","","The volume of the convex hull of a set of points.",null,null],[5,"convex_polyline_area_and_center_of_mass_unchecked","","The area and center of mass of a 2D convex Polyline.",null,null],[5,"convex_polyline_area_unchecked","","The area of a convex polyline.",null,null],[5,"convex_polyline_mass_properties_unchecked","","The mass properties of a 2D convex Polyline.",null,null],[8,"InertiaTensor","","Trait implemented by inertia tensors.",null,null],[10,"apply","","Applies this inertia tensor to a vector.",73,{"inputs":[{"name":"self"},{"name":"av"}],"output":{"name":"av"}}],[10,"to_world_space","","Transforms this inertia tensor from local space to world space.",73,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"self"}}],[10,"to_relative_wrt_point","","Computes this inertia tensor relative to a given point.",73,{"inputs":[{"name":"self"},{"name":"n"},{"name":"p"}],"output":{"name":"self"}}],[8,"Volumetric","","Trait implemented by objects which have a mass, a center of mass, and an inertia tensor.",null,null],[10,"area","","Computes the area of this object.",74,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[10,"volume","","Computes the volume of this object.",74,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[10,"center_of_mass","","Computes the center of mass of this object.",74,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[10,"unit_angular_inertia","","Computes the angular inertia tensor of this object.",74,{"inputs":[{"name":"self"}],"output":{"name":"angularinertia"}}],[11,"mass","","Given its density, this computes the mass of this object.",74,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"n"}}],[11,"angular_inertia","","Given its mass, this computes the angular inertia of this object.",74,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"angularinertia"}}],[11,"mass_properties","","Given its density, this computes the mass, center of mass, and inertia tensor of this object.",74,null],[11,"inertia","","",74,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"inertia"}}],[0,"world","nphysics2d","The physics world.",null,null],[3,"World","nphysics2d::world","The physics world.",null,null],[11,"new","","Creates a new physics world with default parameters.",75,{"inputs":[],"output":{"name":"self"}}],[11,"disable_performance_counters","","Disable the perfomance counters that measure various times and statistics during a timestep.",75,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_performance_counters","","Enable the perfomance counters that measure various times and statistics during a timestep.",75,{"inputs":[{"name":"self"}],"output":null}],[11,"performance_counters","","Retrieve the perfomance counters that measure various times and statistics during a timestep.",75,{"inputs":[{"name":"self"}],"output":{"name":"counters"}}],[11,"set_contact_model","","Set the contact model for all contacts.",75,{"inputs":[{"name":"self"},{"name":"c"}],"output":null}],[11,"integration_parameters","","Retrieve a reference to the parameters for the integration.",75,{"inputs":[{"name":"self"}],"output":{"name":"integrationparameters"}}],[11,"integration_parameters_mut","","Retrieve a mutable reference to the parameters for the integration.",75,{"inputs":[{"name":"self"}],"output":{"name":"integrationparameters"}}],[11,"timestep","","Retrieve the timestep used for the integration.",75,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_timestep","","Sets the timestep used for the integration.",75,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"activate_body","","Activate the given body.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":null}],[11,"add_constraint","","Add a constraints to the physics world and retrieves its handle.",75,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"constrainthandle"}}],[11,"constraint","","Get a reference to the specified constraint.",75,{"inputs":[{"name":"self"},{"name":"constrainthandle"}],"output":{"name":"jointconstraint"}}],[11,"constraint_mut","","Get a mutable reference to the specified constraint.",75,{"inputs":[{"name":"self"},{"name":"constrainthandle"}],"output":{"name":"jointconstraint"}}],[11,"remove_constraint","","Remove the specified constraint from the world.",75,{"inputs":[{"name":"self"},{"name":"constrainthandle"}],"output":{"generics":["jointconstraint"],"name":"box"}}],[11,"add_force_generator","","Add a force generator to the world.",75,{"inputs":[{"name":"self"},{"name":"g"}],"output":{"name":"forcegeneratorhandle"}}],[11,"force_generator","","Retrieve a reference to the specified force generator.",75,{"inputs":[{"name":"self"},{"name":"forcegeneratorhandle"}],"output":{"name":"forcegenerator"}}],[11,"force_generator_mut","","Retrieve a mutable reference to the specified force generator.",75,{"inputs":[{"name":"self"},{"name":"forcegeneratorhandle"}],"output":{"name":"forcegenerator"}}],[11,"remove_force_generator","","Remove the specified force generator from the world.",75,{"inputs":[{"name":"self"},{"name":"forcegeneratorhandle"}],"output":{"generics":["forcegenerator"],"name":"box"}}],[11,"set_gravity","","Set the gravity.",75,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"step","","Execute one time step of the physics simulation.",75,{"inputs":[{"name":"self"}],"output":null}],[11,"remove_bodies","","Remove the specified bodies.",75,null],[11,"remove_multibody_links","","Remove several links of a single multibody.",75,null],[11,"add_rigid_body","","Add a rigid body to the world and retrieve its handle.",75,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"inertia"},{"name":"point"}],"output":{"name":"bodyhandle"}}],[11,"add_multibody_link","","Add a multibody link to the world and retrieve its handle.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"},{"name":"j"},{"name":"vector"},{"name":"vector"},{"name":"inertia"},{"name":"point"}],"output":{"name":"bodyhandle"}}],[11,"add_collider","","Add a collider to the world and retrieve its handle.",75,{"inputs":[{"name":"self"},{"name":"n"},{"name":"shapehandle"},{"name":"bodyhandle"},{"name":"isometry"},{"name":"material"}],"output":{"name":"colliderhandle"}}],[11,"add_sensor","","Add a sensor to the world and retrieve its handle.",75,{"inputs":[{"name":"self"},{"name":"shapehandle"},{"name":"bodyhandle"},{"name":"isometry"}],"output":{"name":"sensorhandle"}}],[11,"body_part","","Get a reference to the specified body part.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodypart"}}],[11,"body","","Get a reference to the specified body.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"body"}}],[11,"body_mut","","Get a mutable reference to the specified body.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodymut"}}],[11,"multibody","","Get a reference to the multibody containing the specified multibody link.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibody"],"name":"option"}}],[11,"multibody_mut","","Get a mutable reference to the multibody containing the specified multibody link.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibody"],"name":"option"}}],[11,"multibody_link","","Get a reference to the specified multibody link.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibodylinkref"],"name":"option"}}],[11,"multibody_link_mut","","Get a mutable reference to the specified multibody link.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibodylinkmut"],"name":"option"}}],[11,"rigid_body","","Get a reference to the specified rigid body.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["rigidbody"],"name":"option"}}],[11,"rigid_body_mut","","Get a mutable reference to the specified rigid body.",75,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["rigidbody"],"name":"option"}}],[11,"collision_world","","Reference to the underlying collision world.",75,{"inputs":[{"name":"self"}],"output":{"name":"collisionworld"}}],[11,"collision_world_mut","","Mutable reference to the underlying collision world.",75,{"inputs":[{"name":"self"}],"output":{"name":"collisionworld"}}],[11,"collider","","Get a mutable reference to the specified collider.",75,{"inputs":[{"name":"self"},{"name":"colliderhandle"}],"output":{"generics":["collider"],"name":"option"}}],[11,"colliders","","An iterator through all the colliders on this collision world.",75,{"inputs":[{"name":"self"}],"output":{"name":"colliders"}}],[11,"contact_events","","An iterator through all the contact events generated during the last execution of `self.step()`.",75,{"inputs":[{"name":"self"}],"output":{"name":"contactevents"}}],[11,"proximity_events","","An iterator through all the proximity events generated during the last execution of `self.step()`.",75,{"inputs":[{"name":"self"}],"output":{"name":"proximityevents"}}],[6,"CollisionWorld","","Type of the collision world used by nphysics.",null,null],[0,"math","nphysics2d","Compilation flags dependent aliases for mathematical types.",null,null],[6,"Dim","nphysics2d::math","The dimension of the ambiant space.",null,null],[6,"AngularDim","","The dimension of the rotation.",null,null],[6,"SpatialDim","","The dimension of a spatial vector.",null,null],[6,"Point","","The point type.",null,null],[6,"SpatialVector","","The vector type with dimension `SpatialDim × 1`.",null,null],[6,"AngularVector","","The angular vector type.",null,null],[6,"Vector","","The vector type.",null,null],[6,"Orientation","","The orientation type.",null,null],[6,"Isometry","","The transformation matrix type.",null,null],[6,"Rotation","","The rotation matrix type.",null,null],[6,"Translation","","The translation type.",null,null],[6,"Velocity","","The velocity type combining the linear velocity and the angular velocity.",null,null],[6,"Force","","The force type combining a linear force and a torque.",null,null],[6,"AngularInertia","","The inertia tensor type.",null,null],[6,"Inertia","","The inertia type.",null,null],[6,"InertiaMatrix","","The inertia matrix type.",null,null],[6,"SpatialMatrix","","Square matrix with dimension `SpatialDim × SpatialDim`.",null,null],[6,"Jacobian","","The type of a constraint jacobian in twist coordinates.",null,null],[6,"JacobianSlice","","The type of a slice of the constraint jacobian in twist coordinates.",null,null],[6,"JacobianSliceMut","","The type of a mutable slice of the constraint jacobian in twist coordinates.",null,null],[17,"SPATIAL_DIM","","The maximum number of possible rotations and translations of a rigid body.",null,null],[17,"ANGULAR_DIM","","The maximum number of possible rotations of a rigid body.",null,null],[17,"DIM","","The maximum number of possible translations of a rigid body.",null,null],[11,"is","nphysics2d::force_generator","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",15,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",15,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",15,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",15,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"nimpulses","nphysics2d::joint","The maximum number of impulses needed by this joints for its constraints.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"num_velocity_constraints","","Maximum number of velocity constrains that can be generated by this joint.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","Initialize and generate velocity constraints to enforce, e.g., joint limits and motors.",27,null],[11,"num_position_constraints","","The maximum number of non-linear position constraints that can be generated by this joint.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","Initialize and generate the i-th position constraints to enforce, e.g., joint limits.",27,null],[11,"is","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",27,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",27,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",27,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",27,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"is","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",28,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",28,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",28,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",28,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"is_active","","Return `true` if the constraint is active.",29,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"bool"}}],[11,"is","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",29,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",29,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",29,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",29,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",29,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",29,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"is","nphysics2d::solver","",68,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",68,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",68,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",68,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",68,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",68,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",68,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"index_mut_const","nphysics2d::utils","Gets a mutable reference to one element, and immutable reference to a second one.",72,null],[11,"mass","nphysics2d::volumetric","Given its density, this computes the mass of this object.",74,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"n"}}],[11,"angular_inertia","","Given its mass, this computes the angular inertia of this object.",74,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"angularinertia"}}],[11,"mass_properties","","Given its density, this computes the mass, center of mass, and inertia tensor of this object.",74,null],[11,"inertia","","",74,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"inertia"}}]],"paths":[[3,"Velocity2"],[3,"Velocity3"],[3,"Force2"],[3,"Force3"],[3,"Inertia2"],[3,"Inertia3"],[3,"CollisionDetectionCounters"],[3,"SolverCounters"],[3,"StagesCounters"],[3,"Timer"],[3,"Counters"],[3,"ColliderContactManifold"],[3,"ActivationManager"],[3,"ConstantAcceleration"],[3,"Spring"],[8,"ForceGenerator"],[3,"JointMotor"],[3,"CartesianJoint"],[3,"FixedJoint"],[3,"FreeJoint"],[3,"PrismaticJoint"],[3,"RevoluteJoint"],[3,"CartesianConstraint"],[3,"FixedConstraint"],[3,"MouseConstraint"],[3,"PrismaticConstraint"],[3,"RevoluteConstraint"],[8,"Joint"],[8,"UnitJoint"],[8,"JointConstraint"],[3,"Material"],[4,"Body"],[4,"BodyMut"],[4,"BodyPart"],[4,"BodyPartMut"],[4,"BodyStatus"],[3,"ActivationStatus"],[3,"BodyHandle"],[3,"BodySet"],[3,"Bodies"],[3,"ColliderData"],[3,"Ground"],[3,"Multibody"],[3,"MultibodyLinks"],[3,"MultibodyWorkspace"],[3,"MultibodyLinkId"],[3,"MultibodyLinkMut"],[3,"MultibodyLinkRef"],[3,"RigidBody"],[3,"BilateralConstraint"],[3,"BilateralGroundConstraint"],[3,"ConstraintGeometry"],[3,"UnilateralConstraint"],[3,"UnilateralGroundConstraint"],[3,"GenericNonlinearConstraint"],[3,"NonlinearUnilateralConstraint"],[3,"IntegrationParameters"],[3,"ConstraintSet"],[4,"ImpulseLimits"],[4,"ForceDirection"],[3,"ImpulseCache"],[3,"MoreauJeanSolver"],[3,"SignoriniCoulombPyramidModel"],[3,"SignoriniModel"],[3,"MultibodyJointLimitsNonlinearConstraintGenerator"],[3,"SORProx"],[3,"NonlinearSORProx"],[8,"NonlinearConstraintGenerator"],[8,"ContactModel"],[3,"UnionFindSet"],[3,"DeterministicState"],[8,"GeneralizedCross"],[8,"IndexMut2"],[8,"InertiaTensor"],[8,"Volumetric"],[3,"World"]]};
searchIndex["nphysics3d"] = {"doc":"nphysics ======== nphysics is a 2 and 3-dimensional physics engine for games and animations. It uses ncollide for collision detection, and nalgebra for vector/matrix math. 2D and 3D implementations both share the same code!","items":[[0,"algebra","nphysics3d","Dynamics-specific algebraic entities: velocity, forces, and inertias.",null,null],[3,"Velocity2","nphysics3d::algebra","A velocity structure combining both the linear angular velocities of a point.",null,null],[12,"linear","","The linear velocity.",0,null],[12,"angular","","The angular velocity.",0,null],[3,"Velocity3","","A velocity structure combining both the linear angular velocities of a point.",null,null],[12,"linear","","The linear velocity.",1,null],[12,"angular","","The angular velocity.",1,null],[3,"Force2","","A force with a linear and agular (torque) component.",null,null],[12,"linear","","The linear force.",2,null],[12,"angular","","The torque.",2,null],[3,"Force3","","A force with a linear and agular (torque) component.",null,null],[12,"linear","","The linear force.",3,null],[12,"angular","","The linear force.",3,null],[3,"Inertia2","","The inertia of a rigid body grouping both its mass and its angular inertia.",null,null],[12,"linear","","The linear part (mass) of the inertia.",4,null],[12,"angular","","The angular inertia.",4,null],[3,"Inertia3","","The inertia of a rigid body grouping both its mass and its angular inertia.",null,null],[12,"linear","","The linear part (mass) of the inertia.",5,null],[12,"angular","","The angular inertia.",5,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"velocity2"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create velocity from its linear and angular parts.",0,{"inputs":[{"name":"vector2"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_with_vectors","","Create velocity from its linear and angular parts.",0,{"inputs":[{"name":"vector2"},{"name":"vector1"}],"output":{"name":"self"}}],[11,"angular","","Create a purely angular velocity.",0,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"linear","","Create a purely linear velocity.",0,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"zero","","Create a zero velocity.",0,{"inputs":[],"output":{"name":"self"}}],[11,"angular_vector","","The angular part of the velocity.",0,{"inputs":[{"name":"self"}],"output":{"name":"vector1"}}],[11,"as_slice","","This velocity seen as a slice.",0,null],[11,"as_mut_slice","","This velocity seen as a mutable slice.",0,null],[11,"as_vector","","This velocity seen as a vector.",0,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"as_vector_mut","","This velocity seen as a mutable vector.",0,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"from_vector","","Create a velocity from a vector.",0,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"from_slice","","Create a velocity from a slice.",0,null],[11,"shift","","Compute the velocity of a point that is located at the coordinates `shift` relative to the point having `self` as velocity.",0,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"self"}}],[11,"rotated","","Rotate each component of `self` by `rot`.",0,{"inputs":[{"name":"self"},{"name":"rotation2"}],"output":{"name":"self"}}],[11,"transformed","","Transform each component of `self` by `iso`.",0,{"inputs":[{"name":"self"},{"name":"isometry2"}],"output":{"name":"self"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"velocity3"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create velocity from its linear and angular parts.",1,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"new_with_vectors","","Create velocity from its linear and angular parts.",1,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"angular","","Create a purely angular velocity.",1,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"linear","","Create a purely linear velocity.",1,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"zero","","Create a zero velocity.",1,{"inputs":[],"output":{"name":"self"}}],[11,"angular_vector","","The angular part of the velocity.",1,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"as_slice","","This velocity seen as a slice.",1,null],[11,"as_mut_slice","","This velocity seen as a mutable slice.",1,null],[11,"as_vector","","This velocity seen as a vector.",1,{"inputs":[{"name":"self"}],"output":{"name":"vector6"}}],[11,"as_vector_mut","","This velocity seen as a mutable vector.",1,{"inputs":[{"name":"self"}],"output":{"name":"vector6"}}],[11,"from_vector","","Create a velocity from a vector.",1,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"from_slice","","Create a velocity from a slice.",1,null],[11,"shift","","Compute the velocity of a point that is located at the coordinates `shift` relative to the point having `self` as velocity.",1,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"transformed","","Transform each component of `self` by `iso`.",1,{"inputs":[{"name":"self"},{"name":"isometry3"}],"output":{"name":"self"}}],[11,"rotated","","Rotate each component of `self` by `rot`.",1,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":{"name":"self"}}],[11,"add","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"force2"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a force from its linear and angular components.",2,{"inputs":[{"name":"vector2"},{"name":"n"}],"output":{"name":"self"}}],[11,"zero","","A zero force.",2,{"inputs":[],"output":{"name":"self"}}],[11,"from_slice","","Create a force from a slice where the entries 0 and 1 are for the linear part and 2 for the angular part.",2,null],[11,"from_vector","","Create a force from a vector where the entries 0 and 1 are for the linear part and 2 for the angular part.",2,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"torque","","Create a pure torque.   ",2,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"torque_from_vector","","Create a pure torque.",2,{"inputs":[{"name":"vector1"}],"output":{"name":"self"}}],[11,"linear","","Create a pure linear force.",2,{"inputs":[{"name":"vector2"}],"output":{"name":"self"}}],[11,"linear_at_point","","Creates the resultant of a linear force applied at the given point (relative to the center of mass).",2,{"inputs":[{"name":"vector2"},{"name":"point2"}],"output":{"name":"self"}}],[11,"torque_at_point","","Creates the resultant of a torque applied at the given point (relative to the center of mass).",2,{"inputs":[{"name":"n"},{"name":"point2"}],"output":{"name":"self"}}],[11,"torque_from_vector_at_point","","Creates the resultant of a torque applied at the given point (relative to the center of mass).",2,{"inputs":[{"name":"vector1"},{"name":"point2"}],"output":{"name":"self"}}],[11,"as_slice","","This force seen as a slice.",2,null],[11,"as_vector","","This force seen as a vector.",2,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"as_vector_mut","","This force seen as a mutable vector.",2,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"neg","","",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"force3"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a force from its linear and angular components.",3,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"zero","","A zero force.",3,{"inputs":[],"output":{"name":"self"}}],[11,"from_slice","","Create a force from a slice where the linear part are stored first.",3,null],[11,"from_vector","","Create a force from a vector where the linear part are stored first.",3,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"torque","","Create a pure torque.   ",3,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"torque_from_vector","","Create a pure torque.",3,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"torque_at_point","","Creates the resultant of a torque applied at the given point (relative to the center of mass).",3,{"inputs":[{"name":"vector3"},{"name":"point3"}],"output":{"name":"self"}}],[11,"torque_from_vector_at_point","","Creates the resultant of a torque applied at the given point (relative to the center of mass).",3,{"inputs":[{"name":"vector3"},{"name":"point3"}],"output":{"name":"self"}}],[11,"linear","","Create a pure linear force.",3,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"linear_at_point","","Creates the resultant of a linear force applied at the given point (relative to the center of mass).",3,{"inputs":[{"name":"vector3"},{"name":"point3"}],"output":{"name":"self"}}],[11,"as_slice","","This force seen as a slice.",3,null],[11,"as_vector","","This force seen as a vector.",3,{"inputs":[{"name":"self"}],"output":{"name":"vector6"}}],[11,"as_vector_mut","","This force seen as a mutable vector.",3,{"inputs":[{"name":"self"}],"output":{"name":"vector6"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"add_assign","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"sub_assign","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"neg","","",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"inertia2"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an inertia from its linear and angular components.",4,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_with_angular_matrix","","Creates an inertia from its linear and angular components.",4,{"inputs":[{"name":"n"},{"name":"matrix1"}],"output":{"name":"self"}}],[11,"mass","","Get the mass.",4,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"zero","","Create a zero inertia.",4,{"inputs":[],"output":{"name":"self"}}],[11,"angular_matrix","","Get the angular inertia tensor.",4,{"inputs":[{"name":"self"}],"output":{"name":"matrix1"}}],[11,"to_matrix","","Convert the inertia into a matrix where the mass is represented as a 2x2 diagonal matrix on the upper-left corner, and the angular part as a 1x1 matrix on the lower-rigth corner.",4,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"transformed","","Compute the inertia on the given coordinate frame.",4,{"inputs":[{"name":"self"},{"name":"isometry2"}],"output":{"name":"self"}}],[11,"inverse","","Inverts this inetia matrix.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"inertia2"}],"output":{"name":"inertia2"}}],[11,"add_assign","","",4,{"inputs":[{"name":"self"},{"name":"inertia2"}],"output":null}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"velocity2"}],"output":{"name":"force2"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"force2"}],"output":{"name":"velocity2"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"inertia3"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an inertia from its linear and angular components.",5,{"inputs":[{"name":"n"},{"name":"matrix3"}],"output":{"name":"self"}}],[11,"new_with_angular_matrix","","Creates an inertia from its linear and angular components.",5,{"inputs":[{"name":"n"},{"name":"matrix3"}],"output":{"name":"self"}}],[11,"mass","","Get the mass.",5,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"zero","","Create a zero inertia.",5,{"inputs":[],"output":{"name":"self"}}],[11,"angular_matrix","","Get the angular inertia tensor.",5,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"to_matrix","","Convert the inertia into a matrix where the mass is represented as a 3x3 diagonal matrix on the upper-left corner, and the angular part as a 3x3 matrix on the lower-rigth corner.",5,{"inputs":[{"name":"self"}],"output":{"name":"matrix6"}}],[11,"transformed","","Compute the inertia on the given coordinate frame.",5,{"inputs":[{"name":"self"},{"name":"isometry3"}],"output":{"name":"self"}}],[11,"inverse","","Inverts this inetia matrix.",5,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"add","","",5,{"inputs":[{"name":"self"},{"name":"inertia3"}],"output":{"name":"inertia3"}}],[11,"add_assign","","",5,{"inputs":[{"name":"self"},{"name":"inertia3"}],"output":null}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"velocity3"}],"output":{"name":"force3"}}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"force3"}],"output":{"name":"velocity3"}}],[0,"counters","nphysics3d","Counters for benchmarking various parts of the physics engine.",null,null],[3,"CollisionDetectionCounters","nphysics3d::counters","Performance counters related to collision detection.",null,null],[12,"ncontact_pairs","","Number of contact pairs detected.",6,null],[12,"broad_phase_time","","Time spent for the broad-phase of the collision detection.",6,null],[12,"narrow_phase_time","","Time spent for the narrow-phase of the collision detection.",6,null],[3,"SolverCounters","","Performance counters related to constraints resolution.",null,null],[12,"nconstraints","","Number of constraints generated.",7,null],[12,"ncontacts","","Number of contacts found.",7,null],[12,"resolution_time","","Time spent for the resolution of the constraints (force computation).",7,null],[12,"assembly_time","","Time spent for the assembly of all the constraints into a linear complentarity problem.",7,null],[12,"position_update_time","","Time spent for the update of the position of the bodies.",7,null],[3,"StagesCounters","","Performance counters related to each stage of the time step.",null,null],[12,"update_time","","Time spent for updating the kinematic and dynamics of every body.",8,null],[12,"collision_detection_time","","Total time spent for the collision detection (including both broad- and narrow- phases).",8,null],[12,"island_construction_time","","Time spent for the computation of collision island and body activation/deactivation (sleeping).",8,null],[12,"solver_time","","Total time spent for the constraints resolution and position update.t",8,null],[3,"Timer","","A timer.",null,null],[3,"Counters","","Aggregation of all the performances counters tracked by nphysics.",null,null],[11,"new","","Creates a new counter initialized to zero.",6,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new counter initialized to zero.",7,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new counter intialized to zero.",8,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"timer"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new timer initialized to zero and not started.",9,{"inputs":[],"output":{"name":"self"}}],[11,"start","","Start the timer.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"pause","","Pause the timer.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"resume","","Resume the timer.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"time","","The measured time between the last `.start()` and `.pause()` calls.",9,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"new","","Create a new set of counters initialized to wero.",10,{"inputs":[{"name":"bool"}],"output":{"name":"self"}}],[11,"enable","","Enable all the counters.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"enabled","","Return `true` if the counters are enabled.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"disable","","Disable all the counters.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"step_started","","Notify that the time-step has started.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"step_completed","","Notfy that the time-step has finished.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"step_time","","Total time spent for one step of the physics engine.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"set_nconstraints","","Set the number of constraints generated.",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"set_ncontact_pairs","","Set the number of contact pairs generated.",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"update_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"update_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"update_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"collision_detection_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"collision_detection_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"collision_detection_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"island_construction_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"island_construction_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"island_construction_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"solver_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"solver_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"solver_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"assembly_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"assembly_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"assembly_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"resolution_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"resolution_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"resolution_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"position_update_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"position_update_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"positon_update_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"broad_phase_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"broad_phase_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"broad_phase_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"narrow_phase_started","","Start this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"narrow_phase_completed","","Stop this timer.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"narrow_phase_time","","Gets the time elapsed for this timer.",10,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"detection","nphysics3d","Collision detection information.",null,null],[3,"ActivationManager","nphysics3d::detection","Structure that monitors island-based activation/deactivation of bodies.",null,null],[3,"ColliderContactManifold","","A contact manifold between two bodies.",null,null],[12,"collider1","","The first collider involved in the contact.",11,null],[12,"collider2","","The second collider involved in the contact.",11,null],[12,"pos_wrt_body1","","The position of the contact manifold wrt. the first body.",11,null],[12,"pos_wrt_body2","","The position of the contact manifold wrt. the second body.",11,null],[12,"manifold","","The contact manifold.",11,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"collidercontactmanifold"}}],[11,"new","","Initialize a new contact manifold.",11,{"inputs":[{"name":"collider"},{"name":"collider"},{"name":"contactmanifold"}],"output":{"name":"self"}}],[11,"len","","The number of contacts on the manifold.",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"contacts","","Get all the contacts from the manifold.",11,null],[11,"deepest_contact","","Get the deepest contact, if any, from the manifold.",11,{"inputs":[{"name":"self"}],"output":{"generics":["trackedcontact"],"name":"option"}}],[11,"body1","","The handle of the first body part involved in the contact.",11,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"body2","","The handle of the first body part involved in the contact.",11,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"new","","Creates a new `ActivationManager2`.",12,{"inputs":[{"name":"n"}],"output":{"name":"activationmanager"}}],[11,"deferred_activate","","Notify the `ActivationManager2` that is has to activate an object at the next update.",12,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":null}],[11,"update","","Update the activation manager, activating and deactivating objects when needed.",12,{"inputs":[{"name":"self"},{"name":"bodyset"},{"name":"collisionworld"},{"name":"slab"},{"name":"vec"}],"output":null}],[0,"force_generator","nphysics3d","Persistant force generation.",null,null],[3,"ConstantAcceleration","nphysics3d::force_generator","Force generator adding a constant acceleration at the center of mass of a set of body parts.",null,null],[3,"Spring","","Generator of a force proportional to the distance separating two bodies.",null,null],[11,"new","","Adds a new constant acceleration generator.",13,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"add_body_part","","Add a body part to be affected by this force generator.",13,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":null}],[11,"apply","","",13,{"inputs":[{"name":"self"},{"name":"integrationparameters"},{"name":"bodyset"}],"output":{"name":"bool"}}],[11,"new","","Initialize a spring attached to `b1` and `b2` at the points `anchor1` and `anchor2`.",14,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"name":"point"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Sets the attach point to the first body.",14,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"set_anchor_2","","Sets the attach point to the second body.",14,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"apply","","",14,{"inputs":[{"name":"self"},{"name":"integrationparameters"},{"name":"bodyset"}],"output":{"name":"bool"}}],[6,"ForceGeneratorHandle","","The handle of a force generator.",null,null],[8,"ForceGenerator","","A persistant force generator.",null,null],[10,"apply","","Apply forces to some bodies.",15,{"inputs":[{"name":"self"},{"name":"integrationparameters"},{"name":"bodyset"}],"output":{"name":"bool"}}],[0,"joint","nphysics3d","Joints using the reduced-coordinates formalism or using constraints.",null,null],[3,"CartesianJoint","nphysics3d::joint","A joint that allows only all the translational degrees of freedom between two multibody links.",null,null],[3,"FixedJoint","","A joint that does not allow any relative degrees of freedom.",null,null],[3,"FreeJoint","","A joint that allows all the relative degrees of freedom between two multibody links.",null,null],[3,"PrismaticJoint","","A unit joint that allows only one translational degree on freedom.",null,null],[3,"RevoluteJoint","","A unit joint that allows only one relative rotational degree of freedom between two multibody links.",null,null],[3,"BallJoint","","A joint that allows only all rotational degrees of freedom between two multibody links.",null,null],[3,"CylindricalJoint","","A joint that allows one translational and one rotational degrees of freedom along a single axis.",null,null],[3,"HelicalJoint","","A joint that allows one degree of freedom between two multibody links.",null,null],[3,"PinSlotJoint","","A joint that allows one translational and one rotational degrees of freedom.",null,null],[3,"PlanarJoint","","A joint that allows 1 rotational and 2 translational degrees of freedom.",null,null],[3,"RectangularJoint","","A joint that allows two translational degrees of freedom.",null,null],[3,"UniversalJoint","","A joint that allows only two relative rotations between two multibody links.",null,null],[3,"CartesianConstraint","","A constraint that removes all relative angular motion between two body parts.",null,null],[3,"FixedConstraint","","A constraint that removes all degrees of freedom between two body parts.",null,null],[3,"JointMotor","","Description of a motor applied to a joint.",null,null],[12,"desired_velocity","","The velocity the motor will attempt to reach.",16,null],[12,"max_force","","The maximum force deliverable by the motor.",16,null],[12,"enabled","","Whether or not the motor is active.",16,null],[3,"MouseConstraint","","A spring-like constraint to be used to drag a body part with the mouse.",null,null],[3,"PrismaticConstraint","","A constraint that remove all be one translational degrees of freedom.",null,null],[3,"RevoluteConstraint","","A constraint that removes all relative motions except one rotation between two body parts.",null,null],[3,"BallConstraint","","A constraint that removes all relative linear motion between two body parts.",null,null],[3,"CylindricalConstraint","","A constraint that removes all degrees of freedom (of one body part relative to a second one) except one translation along an axis and one rotation along the same axis.",null,null],[3,"PinSlotConstraint","","A constraint that removes two translational and two rotational degrees of freedoms.",null,null],[3,"PlanarConstraint","","A constraint that removes one relative translational degree of freedom, and all but one rotational degrees of freedom.",null,null],[3,"RectangularConstraint","","A constraint that remove all relative rotations and one relative translation between two body parts.",null,null],[3,"UniversalConstraint","","A constraint that removes all but two relative rotations along distinct axii.",null,null],[5,"unit_joint_num_velocity_constraints","","Computes the maximum number of velocity constraints to be applied by the given unit joint.",null,{"inputs":[{"name":"j"}],"output":{"name":"usize"}}],[5,"unit_joint_position_constraint","","Initializes and generate the position constraints applicable to the multibody links attached to this joint.",null,null],[5,"unit_joint_velocity_constraints","","Initializes and generate the velocity constraints applicable to the multibody links attached to this joint.",null,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cartesianjoint"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a cartesian joint with an initial position given by `position`.",17,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"ndofs","","",17,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",17,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",17,null],[11,"jacobian","","",17,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",17,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",17,null],[11,"jacobian_mul_coordinates","","",17,null],[11,"jacobian_dot_mul_coordinates","","",17,null],[11,"default_damping","","",17,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",17,null],[11,"apply_displacement","","",17,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"fixedjoint"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a joint that does not a allow any degrees of freedom between two multibody links.",18,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"ndofs","","",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",18,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",18,null],[11,"jacobian","","",18,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",18,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",18,null],[11,"integrate","","",18,null],[11,"apply_displacement","","",18,null],[11,"jacobian_mul_coordinates","","",18,null],[11,"jacobian_dot_mul_coordinates","","",18,null],[11,"default_damping","","",18,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"freejoint"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a free joint with the given initial position of the descendent, relative to the ground.",19,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"ndofs","","",19,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",19,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",19,null],[11,"jacobian","","",19,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",19,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",19,null],[11,"integrate","","",19,null],[11,"apply_displacement","","",19,null],[11,"jacobian_mul_coordinates","","",19,null],[11,"jacobian_dot_mul_coordinates","","",19,null],[11,"default_damping","","",19,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"prismaticjoint"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new prismatic joint where the allowed traslation is defined along the provided axis.",20,{"inputs":[{"generics":["vector"],"name":"unit"},{"name":"n"}],"output":{"name":"self"}}],[11,"offset","","The relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"translation","","The relative translation of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":{"name":"translation"}}],[11,"min_offset","","The lower limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset","","The upper limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset","","Disable the lower limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset","","Disable the upper limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset","","Set the lower limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset","","Set the upper limit of the relative displacement of the attached multibody links along the joint axis.",20,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_linear_motor_enabled","","Returns `true` if the joint motor is enabled.",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_linear_motor","","Enable the joint motor.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_linear_motor","","Disable the joint motor.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_linear_motor_velocity","","The desired relative velocity to be enforced by the joint motor.",20,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_linear_motor_velocity","","Set the desired relative velocity to be enforced by the joint motor.",20,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_linear_motor_force","","The maximum force that can be output by the joint motor.",20,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_linear_motor_force","","Set the maximum force that can be output by the joint motor.",20,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"ndofs","","",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",20,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",20,null],[11,"jacobian","","",20,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",20,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",20,null],[11,"default_damping","","",20,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",20,null],[11,"apply_displacement","","",20,null],[11,"jacobian_mul_coordinates","","",20,null],[11,"jacobian_dot_mul_coordinates","","",20,null],[11,"num_velocity_constraints","","",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",20,null],[11,"num_position_constraints","","",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",20,null],[11,"position","","",20,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"motor","","",20,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[11,"min_position","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_position","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"revolutejoint"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new revolute joint with an axis and an initial angle.",21,{"inputs":[{"generics":["angularvector"],"name":"unit"},{"name":"n"}],"output":{"name":"self"}}],[11,"axis","","The axis of the rotational degree of freedom.",21,{"inputs":[{"name":"self"}],"output":{"generics":["angularvector"],"name":"unit"}}],[11,"angle","","The angle of rotation.",21,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"rotation","","The rotation from an attached multibody link to its dependent.",21,{"inputs":[{"name":"self"}],"output":{"name":"rotation"}}],[11,"local_jacobian","","The jacobian of this joint expressed in the local coordinate frame of the joint.",21,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"local_jacobian_dot","","The time-derivative of the jacobian of this joint expressed in the local coordinate frame of the joint.",21,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"local_jacobian_dot_veldiff","","The velocity-derivative of the time-derivative of the jacobian of this joint expressed in the local coordinate frame of the joint.",21,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"min_angle","","The lower limit of the rotation angle.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_angle","","The upper limit of the rotation angle.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_angle","","Disable the lower limit of the rotation angle.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_angle","","Disable the upper limit of the rotation angle.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_angle","","Enable and set the lower limit of the rotation angle.",21,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_angle","","Enable and set the upper limit of the rotation angle.",21,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_angular_motor_enabled","","Return `true` if the angular motor of this joint is enabled.",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_angular_motor","","Enable the angular motor of this joint.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_angular_motor","","Disable the angular motor of this joint.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_angular_motor_velocity","","The desired angular velocity of the joint motor.",21,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_angular_motor_velocity","","Set the desired angular velocity of the joint motor.",21,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_angular_motor_torque","","The maximum torque that can be delivered by the joint motor.",21,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_angular_motor_torque","","Set the maximum torque that can be delivered by the joint motor.",21,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"ndofs","","",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",21,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[11,"update_jacobians","","",21,null],[11,"jacobian","","",21,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",21,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",21,null],[11,"integrate","","",21,null],[11,"default_damping","","",21,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"apply_displacement","","",21,null],[11,"jacobian_mul_coordinates","","",21,null],[11,"jacobian_dot_mul_coordinates","","",21,null],[11,"num_velocity_constraints","","",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",21,null],[11,"num_position_constraints","","",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",21,null],[11,"position","","",21,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"motor","","",21,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[11,"min_position","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_position","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"balljoint"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a ball joint with the an initial position given by a rotation in axis-angle form.",22,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"ndofs","","",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",22,{"inputs":[{"name":"self"},{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"update_jacobians","","",22,null],[11,"jacobian","","",22,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",22,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",22,null],[11,"jacobian_mul_coordinates","","",22,null],[11,"jacobian_dot_mul_coordinates","","",22,null],[11,"default_damping","","",22,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",22,null],[11,"apply_displacement","","",22,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"cylindricaljoint"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a cylindrical joint with the given axis and initial position of angle.",23,{"inputs":[{"generics":["vector3"],"name":"unit"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"ndofs","","",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",23,{"inputs":[{"name":"self"},{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"update_jacobians","","",23,null],[11,"jacobian","","",23,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",23,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",23,null],[11,"jacobian_mul_coordinates","","",23,null],[11,"jacobian_dot_mul_coordinates","","",23,null],[11,"default_damping","","",23,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",23,null],[11,"apply_displacement","","",23,null],[11,"num_velocity_constraints","","",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",23,null],[11,"num_position_constraints","","",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",23,null],[11,"min_offset","","The lower limit of the relative translational displacement of the attached multibody links along the joint axis.",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset","","The upper limit of the relative translational displacement of the attached multibody links along the joint axis.",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset","","Disable the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset","","Disable the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset","","Set the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",23,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset","","Set the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",23,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_linear_motor_enabled","","Returns `true` if the joint translational motor is enabled.",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_linear_motor","","Enable the joint translational motor.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_linear_motor","","Disable the joint translational motor.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_linear_motor_velocity","","The desired relative translational velocity to be enforced by the joint motor.",23,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_linear_motor_velocity","","Set the desired relative translational velocity to be enforced by the joint motor.",23,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_linear_motor_force","","The maximum force that can be output by the joint translational motor.",23,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_linear_motor_force","","Set the maximum force that can be output by the joint translational motor.",23,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"min_angle","","The lower limit of the rotation angle.",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_angle","","The upper limit of the rotation angle.",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_angle","","Disable the lower limit of the rotation angle.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_angle","","Disable the upper limit of the rotation angle.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_angle","","Enable and set the lower limit of the rotation angle.",23,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_angle","","Enable and set the upper limit of the rotation angle.",23,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_angular_motor_enabled","","Return `true` if the angular motor of this joint is enabled.",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_angular_motor","","Enable the angular motor of this joint.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_angular_motor","","Disable the angular motor of this joint.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_angular_motor_velocity","","The desired angular velocity of the joint motor.",23,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_angular_motor_velocity","","Set the desired angular velocity of the joint motor.",23,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_angular_motor_torque","","The maximum torque that can be delivered by the joint motor.",23,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_angular_motor_torque","","Set the maximum torque that can be delivered by the joint motor.",23,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"helicaljoint"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create an helical joint with the given axis and initial angle.",24,{"inputs":[{"generics":["vector3"],"name":"unit"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"offset","","The translational displacement along the joint axis.",24,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"angle","","The rotational displacement along the joint axis.",24,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"ndofs","","",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",24,{"inputs":[{"name":"self"},{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"update_jacobians","","",24,null],[11,"jacobian","","",24,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",24,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",24,null],[11,"jacobian_mul_coordinates","","",24,null],[11,"jacobian_dot_mul_coordinates","","",24,null],[11,"default_damping","","",24,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",24,null],[11,"apply_displacement","","",24,null],[11,"num_velocity_constraints","","",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",24,null],[11,"num_position_constraints","","",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",24,null],[11,"position","","",24,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"motor","","",24,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[11,"min_position","","",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_position","","",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"min_angle","","The lower limit of the rotation angle.",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_angle","","The upper limit of the rotation angle.",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_angle","","Disable the lower limit of the rotation angle.",24,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_angle","","Disable the upper limit of the rotation angle.",24,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_angle","","Enable and set the lower limit of the rotation angle.",24,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_angle","","Enable and set the upper limit of the rotation angle.",24,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_angular_motor_enabled","","Return `true` if the angular motor of this joint is enabled.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_angular_motor","","Enable the angular motor of this joint.",24,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_angular_motor","","Disable the angular motor of this joint.",24,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_angular_motor_velocity","","The desired angular velocity of the joint motor.",24,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_angular_motor_velocity","","Set the desired angular velocity of the joint motor.",24,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_angular_motor_torque","","The maximum torque that can be delivered by the joint motor.",24,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_angular_motor_torque","","Set the maximum torque that can be delivered by the joint motor.",24,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"pinslotjoint"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new pin-slot joint with axii expressed in the local coordinate frame of the attached bodies, and with initial linear position and angle.",25,{"inputs":[{"generics":["vector3"],"name":"unit"},{"generics":["vector3"],"name":"unit"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"offset","","The linear displacement.",25,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"angle","","The angular displacement.",25,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"ndofs","","",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",25,{"inputs":[{"name":"self"},{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"update_jacobians","","",25,null],[11,"jacobian","","",25,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",25,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",25,null],[11,"jacobian_mul_coordinates","","",25,null],[11,"jacobian_dot_mul_coordinates","","",25,null],[11,"default_damping","","",25,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",25,null],[11,"apply_displacement","","",25,null],[11,"num_velocity_constraints","","",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",25,null],[11,"num_position_constraints","","",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",25,null],[11,"min_offset","","The lower limit of the relative translational displacement of the attached multibody links along the joint axis.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset","","The upper limit of the relative translational displacement of the attached multibody links along the joint axis.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset","","Disable the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset","","Disable the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset","","Set the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset","","Set the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_linear_motor_enabled","","Returns `true` if the joint translational motor is enabled.",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_linear_motor","","Enable the joint translational motor.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_linear_motor","","Disable the joint translational motor.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_linear_motor_velocity","","The desired relative translational velocity to be enforced by the joint motor.",25,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_linear_motor_velocity","","Set the desired relative translational velocity to be enforced by the joint motor.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_linear_motor_force","","The maximum force that can be output by the joint translational motor.",25,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_linear_motor_force","","Set the maximum force that can be output by the joint translational motor.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"min_angle","","The lower limit of the rotation angle.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_angle","","The upper limit of the rotation angle.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_angle","","Disable the lower limit of the rotation angle.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_angle","","Disable the upper limit of the rotation angle.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_angle","","Enable and set the lower limit of the rotation angle.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_angle","","Enable and set the upper limit of the rotation angle.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_angular_motor_enabled","","Return `true` if the angular motor of this joint is enabled.",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_angular_motor","","Enable the angular motor of this joint.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_angular_motor","","Disable the angular motor of this joint.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_angular_motor_velocity","","The desired angular velocity of the joint motor.",25,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_angular_motor_velocity","","Set the desired angular velocity of the joint motor.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_angular_motor_torque","","The maximum torque that can be delivered by the joint motor.",25,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_angular_motor_torque","","Set the maximum torque that can be delivered by the joint motor.",25,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"planarjoint"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new planar joint where both translational degrees of freedoms are along the provide axii.",26,{"inputs":[{"generics":["vector3"],"name":"unit"},{"generics":["vector3"],"name":"unit"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"ndofs","","",26,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",26,{"inputs":[{"name":"self"},{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"update_jacobians","","",26,null],[11,"jacobian","","",26,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",26,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",26,null],[11,"jacobian_mul_coordinates","","",26,null],[11,"jacobian_dot_mul_coordinates","","",26,null],[11,"default_damping","","",26,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",26,null],[11,"apply_displacement","","",26,null],[11,"num_velocity_constraints","","",26,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",26,null],[11,"num_position_constraints","","",26,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",26,null],[11,"min_offset_1","","The lower limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset_1","","The upper limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset_1","","Disable the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset_1","","Disable the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset_1","","Set the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset_1","","Set the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_linear_motor_enabled_1","","Returns `true` if the joint translational motor is enabled.",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_linear_motor_1","","Enable the joint translational motor.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_linear_motor_1","","Disable the joint translational motor.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_linear_motor_velocity_1","","The desired relative translational velocity to be enforced by the joint motor.",26,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_linear_motor_velocity_1","","Set the desired relative translational velocity to be enforced by the joint motor.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_linear_motor_force_1","","The maximum force that can be output by the joint translational motor.",26,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_linear_motor_force_1","","Set the maximum force that can be output by the joint translational motor.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"min_offset_2","","The lower limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset_2","","The upper limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset_2","","Disable the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset_2","","Disable the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset_2","","Set the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset_2","","Set the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_linear_motor_enabled_2","","Returns `true` if the joint translational motor is enabled.",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_linear_motor_2","","Enable the joint translational motor.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_linear_motor_2","","Disable the joint translational motor.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_linear_motor_velocity_2","","The desired relative translational velocity to be enforced by the joint motor.",26,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_linear_motor_velocity_2","","Set the desired relative translational velocity to be enforced by the joint motor.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_linear_motor_force2","","The maximum force that can be output by the joint translational motor.",26,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_linear_motor_force_2","","Set the maximum force that can be output by the joint translational motor.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"min_angle","","The lower limit of the rotation angle.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_angle","","The upper limit of the rotation angle.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_angle","","Disable the lower limit of the rotation angle.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_angle","","Disable the upper limit of the rotation angle.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_angle","","Enable and set the lower limit of the rotation angle.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_angle","","Enable and set the upper limit of the rotation angle.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_angular_motor_enabled","","Return `true` if the angular motor of this joint is enabled.",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_angular_motor","","Enable the angular motor of this joint.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_angular_motor","","Disable the angular motor of this joint.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_angular_motor_velocity","","The desired angular velocity of the joint motor.",26,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_angular_motor_velocity","","Set the desired angular velocity of the joint motor.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_angular_motor_torque","","The maximum torque that can be delivered by the joint motor.",26,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_angular_motor_torque","","Set the maximum torque that can be delivered by the joint motor.",26,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"rectangularjoint"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rectangular joint allowing relative translations anlon the two provided axii.Isometry3",27,{"inputs":[{"generics":["vector3"],"name":"unit"},{"generics":["vector3"],"name":"unit"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"ndofs","","",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",27,{"inputs":[{"name":"self"},{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"update_jacobians","","",27,null],[11,"jacobian","","",27,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",27,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",27,null],[11,"jacobian_mul_coordinates","","",27,null],[11,"jacobian_dot_mul_coordinates","","",27,null],[11,"default_damping","","",27,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",27,null],[11,"apply_displacement","","",27,null],[11,"num_velocity_constraints","","",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",27,null],[11,"num_position_constraints","","",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",27,null],[11,"min_offset_1","","The lower limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset_1","","The upper limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset_1","","Disable the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset_1","","Disable the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset_1","","Set the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset_1","","Set the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_linear_motor_enabled_1","","Returns `true` if the joint translational motor is enabled.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_linear_motor_1","","Enable the joint translational motor.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_linear_motor_1","","Disable the joint translational motor.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_linear_motor_velocity_1","","The desired relative translational velocity to be enforced by the joint motor.",27,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_linear_motor_velocity_1","","Set the desired relative translational velocity to be enforced by the joint motor.",27,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_linear_motor_force_1","","The maximum force that can be output by the joint translational motor.",27,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_linear_motor_force_1","","Set the maximum force that can be output by the joint translational motor.",27,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"min_offset_2","","The lower limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset_2","","The upper limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset_2","","Disable the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset_2","","Disable the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset_2","","Set the lower limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset_2","","Set the upper limit of the relative translational displacement of the attached multibody links along the joint axis.",27,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_linear_motor_enabled_2","","Returns `true` if the joint translational motor is enabled.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_linear_motor_2","","Enable the joint translational motor.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_linear_motor_2","","Disable the joint translational motor.",27,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_linear_motor_velocity_2","","The desired relative translational velocity to be enforced by the joint motor.",27,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_linear_motor_velocity_2","","Set the desired relative translational velocity to be enforced by the joint motor.",27,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_linear_motor_force2","","The maximum force that can be output by the joint translational motor.",27,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_linear_motor_force_2","","Set the maximum force that can be output by the joint translational motor.",27,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"universaljoint"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an universal joint allowing rotations along `axis1` and `axis2`.",28,{"inputs":[{"generics":["vector3"],"name":"unit"},{"generics":["vector3"],"name":"unit"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"ndofs","","",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"body_to_parent","","",28,{"inputs":[{"name":"self"},{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"update_jacobians","","",28,null],[11,"jacobian","","",28,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot","","",28,{"inputs":[{"name":"self"},{"name":"isometry3"},{"name":"jacobianslicemut"}],"output":null}],[11,"jacobian_dot_veldiff_mul_coordinates","","",28,null],[11,"jacobian_mul_coordinates","","",28,null],[11,"jacobian_dot_mul_coordinates","","",28,null],[11,"default_damping","","",28,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"integrate","","",28,null],[11,"apply_displacement","","",28,null],[11,"num_velocity_constraints","","",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","",28,null],[11,"num_position_constraints","","",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","",28,null],[11,"min_angle_1","","The lower limit of the rotation angle.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_angle_1","","The upper limit of the rotation angle.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_angle_1","","Disable the lower limit of the rotation angle.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_angle_1","","Disable the upper limit of the rotation angle.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_angle_1","","Enable and set the lower limit of the rotation angle.",28,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_angle_1","","Enable and set the upper limit of the rotation angle.",28,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_angular_motor_enabled_1","","Return `true` if the angular motor of this joint is enabled.",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_angular_motor_1","","Enable the angular motor of this joint.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_angular_motor_1","","Disable the angular motor of this joint.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_angular_motor_velocity_1","","The desired angular velocity of the joint motor.",28,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_angular_motor_velocity_1","","Set the desired angular velocity of the joint motor.",28,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_angular_motor_torque_1","","The maximum torque that can be delivered by the joint motor.",28,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_angular_motor_torque_1","","Set the maximum torque that can be delivered by the joint motor.",28,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"min_angle_2","","The lower limit of the rotation angle.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_angle_2","","The upper limit of the rotation angle.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_angle_2","","Disable the lower limit of the rotation angle.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_angle_2","","Disable the upper limit of the rotation angle.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_angle_2","","Enable and set the lower limit of the rotation angle.",28,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_angle_2","","Enable and set the upper limit of the rotation angle.",28,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_angular_motor_enabled_2","","Return `true` if the angular motor of this joint is enabled.",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_angular_motor_2","","Enable the angular motor of this joint.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_angular_motor_2","","Disable the angular motor of this joint.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"desired_angular_motor_velocity_2","","The desired angular velocity of the joint motor.",28,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_desired_angular_motor_velocity_2","","Set the desired angular velocity of the joint motor.",28,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"max_angular_motor_torque_2","","The maximum torque that can be delivered by the joint motor.",28,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_max_angular_motor_torque_2","","Set the maximum torque that can be delivered by the joint motor.",28,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"new","","Creates a cartesian constaint between two body parts.",29,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"isometry"},{"name":"isometry"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Changes the reference frame for the first body part.",29,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"set_anchor_2","","Changes the reference frame for the second body part.",29,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"num_velocity_constraints","","",29,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",29,null],[11,"velocity_constraints","","",29,null],[11,"cache_impulses","","",29,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",29,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",29,null],[11,"new","","Create a fixed constraint between two body parts.",30,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"isometry"},{"name":"isometry"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Changes the frame attached to the first body part.",30,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"set_anchor_2","","Changes the frame attached to the second body part.",30,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"num_velocity_constraints","","",30,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",30,null],[11,"velocity_constraints","","",30,null],[11,"cache_impulses","","",30,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",30,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",30,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a disable motor with zero desired velocity.",16,{"inputs":[],"output":{"name":"self"}}],[11,"impulse_limits","","The limits of the impulse applicable by the motor on the body parts.",16,{"inputs":[{"name":"self"}],"output":{"name":"impulselimits"}}],[11,"new","","Initialize a mouse constraint between two bodies.BodyHandle",31,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"name":"point"},{"name":"n"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Change the first anchor, expressed in the local space of the first body part.",31,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"set_anchor_2","","Change the first anchor, expressed in the local space of the second body part.",31,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"num_velocity_constraints","","",31,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",31,null],[11,"velocity_constraints","","",31,null],[11,"cache_impulses","","",31,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",31,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",31,null],[11,"new","","Create a new prismatic constraint that ensures the relative motion between the two body parts are restricted to a single translation along the `axis1` axis (expressed in the local coordinates frame of `b1`).",32,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"generics":["vector"],"name":"unit"},{"name":"point"}],"output":{"name":"self"}}],[11,"min_offset","","The lower limit, if any, of the relative translation (along the joint axis) of the body parts attached to this joint.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_offset","","The upper limit, if any, of the relative translation (along the joint axis) of the body parts attached to this joint.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"disable_min_offset","","Disable the lower limit of the relative translational motion along the joint axis.",32,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_max_offset","","Disable the upper limit of the relative translational motion along the joint axis.",32,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_min_offset","","Enables the lower limit of the relative translational motion along the joint axis.",32,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"enable_max_offset","","Disable the lower limit of the relative translational motion along the joint axis.",32,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"num_velocity_constraints","","",32,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",32,null],[11,"velocity_constraints","","",32,null],[11,"cache_impulses","","",32,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",32,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",32,null],[11,"new","","Create a new revolute constraint which ensures the provided axii and anchors always coincide.",33,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"generics":["angularvector"],"name":"unit"},{"name":"point"},{"generics":["angularvector"],"name":"unit"}],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",33,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",33,null],[11,"velocity_constraints","","",33,null],[11,"cache_impulses","","",33,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",33,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",33,null],[11,"new","","Creates a ball constaint between two body parts.",34,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"name":"point"}],"output":{"name":"self"}}],[11,"set_anchor_1","","Change the first anchor, expressed in the local space of the first body part.",34,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"set_anchor_2","","Change the second anchor, expressed in the local space of the second body part.",34,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"num_velocity_constraints","","",34,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",34,null],[11,"velocity_constraints","","",34,null],[11,"cache_impulses","","",34,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",34,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",34,null],[11,"new","","Creates a cartesian constaint between two body parts.",35,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"generics":["vector"],"name":"unit"},{"name":"point"},{"generics":["vector"],"name":"unit"}],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",35,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",35,null],[11,"velocity_constraints","","",35,null],[11,"cache_impulses","","",35,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",35,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",35,null],[11,"new","","Creates a new pin-slot constraint.",36,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"generics":["vector"],"name":"unit"},{"generics":["vector"],"name":"unit"},{"name":"point"},{"generics":["vector"],"name":"unit"}],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",36,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",36,null],[11,"velocity_constraints","","",36,null],[11,"cache_impulses","","",36,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",36,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",36,null],[11,"new","","Create a new planar constraint which ensures the two provided axii always coincide.",37,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"generics":["angularvector"],"name":"unit"},{"name":"point"},{"generics":["angularvector"],"name":"unit"}],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",37,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",37,null],[11,"velocity_constraints","","",37,null],[11,"cache_impulses","","",37,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",37,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",37,null],[11,"new","","Create a new rectangular constraint that restrict `b1` and `b2` to move on a plane orthogonal to `axis1`.",38,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"generics":["angularvector"],"name":"unit"},{"name":"point"}],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",38,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",38,null],[11,"velocity_constraints","","",38,null],[11,"cache_impulses","","",38,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",38,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",38,null],[11,"new","","Create a new universal constraint that ensure the angle between `axis1` and `axis2` is always equal to `angle`.",39,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"point"},{"generics":["angularvector"],"name":"unit"},{"name":"point"},{"generics":["angularvector"],"name":"unit"},{"name":"n"}],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",39,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"anchors","","",39,null],[11,"velocity_constraints","","",39,null],[11,"cache_impulses","","",39,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"num_position_constraints","","",39,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",39,null],[6,"ConstraintHandle","","The handle of a consraint.",null,null],[8,"Joint","","Trait implemented by all joints following the reduced-coordinate formation.",null,null],[10,"ndofs","","The number of degrees of freedom allowed by the joint.",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"body_to_parent","","The position of the multibody link containing this joint relative to its parent.",40,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"vector"}],"output":{"name":"isometry"}}],[10,"update_jacobians","","Update the jacobians of this joint.",40,null],[10,"integrate","","Integrate the position of this joint.",40,null],[10,"apply_displacement","","Apply a displacement to the joint.",40,null],[10,"jacobian","","Sets in `out` the non-zero entries of the joint jacobian transformed by `transform`.",40,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[10,"jacobian_dot","","Sets in `out` the non-zero entries of the time-derivative of the joint jacobian transformed by `transform`.",40,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"jacobianslicemut"}],"output":null}],[10,"jacobian_dot_veldiff_mul_coordinates","","Sets in `out` the non-zero entries of the velocity-derivative of the time-derivative of the joint jacobian transformed by `transform`.",40,null],[10,"jacobian_mul_coordinates","","Multiply the joint jacobian by generalized velocities to obtain the relative velocity of the multibody link containing this joint.",40,null],[10,"jacobian_dot_mul_coordinates","","Multiply the joint jacobian by generalized accelerations to obtain the relative acceleration of the multibody link containing this joint.",40,null],[10,"default_damping","","Fill `out` with the non-zero entries of a damping that can be applied by default to ensure a good stability of the joint.",40,{"inputs":[{"name":"self"},{"name":"dvectorslicemut"}],"output":null}],[11,"nimpulses","","The maximum number of impulses needed by this joints for its constraints.",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"num_velocity_constraints","","Maximum number of velocity constrains that can be generated by this joint.",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","Initialize and generate velocity constraints to enforce, e.g., joint limits and motors.",40,null],[11,"num_position_constraints","","The maximum number of non-linear position constraints that can be generated by this joint.",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","Initialize and generate the i-th position constraints to enforce, e.g., joint limits.",40,null],[8,"UnitJoint","","Trait implemented by joints using the reduced-coordinates approach and allowing only one degree of freedom.",null,null],[10,"position","","The generalized coordinate of the unit joint.",41,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[10,"motor","","The motor applied to the degree of freedom of the unit joitn.",41,{"inputs":[{"name":"self"}],"output":{"name":"jointmotor"}}],[10,"min_position","","The lower limit, if any, set to the generalized coordinate of this unit joint.",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"max_position","","The upper limit, if any, set to the generalized coordinate of this unit joint.",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"JointConstraint","","Trait implemented by joint that operate by generating constraints to restrict the relative motion of two body parts.",null,null],[11,"is_active","","Return `true` if the constraint is active.",42,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"bool"}}],[10,"num_velocity_constraints","","The maximum number of velocity constraints generated by this joint.",42,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"anchors","","The two body parts affected by this joint.",42,null],[10,"velocity_constraints","","Initialize and retrieve all the constraints appied to the bodies attached to this joint.",42,null],[10,"cache_impulses","","Called after velocity constraint resolution, allows the joint to keep a cache of impulses generated for each constraint.",42,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[0,"object","nphysics3d","Objects that may be added to the physical world.",null,null],[3,"Material","nphysics3d::object","Description of the state of surface of a solid.",null,null],[12,"restitution","","Restitution coefficient of the surface.",43,null],[12,"friction","","Friction coefficient of the surface.",43,null],[3,"ActivationStatus","","The activation status of a body.",null,null],[3,"Bodies","","Iterator yielding all the bodies on a body set.",null,null],[3,"BodyHandle","","A unique identifier of a body added to the world.",null,null],[3,"BodySet","","A set containing all the bodies added to the world.",null,null],[3,"ColliderData","","Data stored into each collider.",null,null],[3,"Ground","","A singleton representing the ground.",null,null],[3,"Multibody","","An articulated body simulated using the reduced-coordinates approach.",null,null],[3,"MultibodyLinks","","Iterator through all the multibody links.",null,null],[3,"MultibodyWorkspace","","A temporary workspace for various updates of the multibody.",null,null],[3,"MultibodyLinkId","","The identifier of a multibody link.",null,null],[3,"MultibodyLinkMut","","Mutable reference to a multibody link.",null,null],[3,"MultibodyLinkRef","","A reference to a multibody link.",null,null],[3,"RigidBody","","A rigid body.",null,null],[4,"Body","","A body contained by the physics world.",null,null],[13,"RigidBody","","A rigid body.",44,null],[13,"Multibody","","A multibody.",44,null],[13,"Ground","","The ground.",44,null],[4,"BodyMut","","A mutable body contained by the physics world.",null,null],[13,"RigidBody","","A rigid body.",45,null],[13,"Multibody","","A multibody.",45,null],[13,"Ground","","The ground.",45,null],[4,"BodyPart","","A mutable body part contained by the physics world.",null,null],[13,"RigidBody","","A rigid body.",46,null],[13,"MultibodyLink","","A link of a multibody.",46,null],[13,"Ground","","The ground.",46,null],[4,"BodyPartMut","","A mutable body part contained by the physics world.",null,null],[13,"RigidBody","","A rigid body.",47,null],[13,"MultibodyLink","","A link of a multibody.",47,null],[13,"Ground","","The ground.",47,null],[4,"BodyStatus","","The status of a body.",null,null],[13,"Disabled","","The body is disabled and ignored by the physics engine.",48,null],[13,"Static","","The body is static and thus cannot move.",48,null],[13,"Dynamic","","The body is dynamic and thus can move and is subject to forces.",48,null],[13,"Kinematic","","The body is kinematic so its velocity is controlled by the user and it is not affected by forces and constraints.",48,null],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"material"}}],[11,"new","","Initialize a material with the specified restitution and friction coefficient.",43,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"bodystatus"}],"output":{"name":"bool"}}],[11,"hash","","",48,null],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_threshold","","The default amount of energy bellow which a body can be put to sleep by nphysics.",49,{"inputs":[],"output":{"name":"n"}}],[11,"new_active","","Create a new activation status initialised with the default activation threshold and is active.",49,{"inputs":[],"output":{"name":"self"}}],[11,"new_inactive","","Create a new activation status initialised with the default activation threshold and is inactive.",49,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","Retuns `true` if the body is not asleep.",49,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"deactivation_threshold","","The threshold bellow which the body can be put to sleep.",49,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_deactivation_threshold","","Set the threshold bellow which the body can be put to sleep.",49,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"energy","","The current energy averaged through several frames.",49,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_energy","","Sets the current average energy of the body.",49,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"is_ground","","Checks if this body identifies the ground.",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status_dependent_ndofs","","The number of degrees of freedom (DOF) of this body, taking its status into account.",44,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_ground","","Checks if this body identifies the ground.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status_dependent_ndofs","","The number of degrees of freedom (DOF) of this body, taking its status into account.",45,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"apply_displacement","","Applies a displacement to all the degrees of freedom of this body.",45,null],[11,"handle","","The handle of this body.",44,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"status","","The status of this body.",44,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"activation_status","","Informations regarding activation and deactivation (sleeping) of this body.",44,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"is_active","","Check if this body is active.",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_dynamic","","Whether or not the status of this body is dynamic.",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Whether or not the status of this body is kinematic.",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Whether or not the status of this body is static.",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ndofs","","The number of degrees of freedom of this body.",44,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"generalized_acceleration","","The generalized accelerations at each degree of freedom of this body.",44,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity","","The generalized velocities of this body.",44,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"companion_id","","The companion ID of this body.",44,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"handle","","The handle of this body.",45,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"status","","The status of this body.",45,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"activation_status","","Informations regarding activation and deactivation (sleeping) of this body.",45,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"is_active","","Check if this body is active.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Whether or not the status of this body is kinematic.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Whether or not the status of this body is static.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ndofs","","The number of degrees of freedom of this body.",45,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"generalized_acceleration","","The generalized accelerations at each degree of freedom of this body.",45,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity","","The generalized velocities of this body.",45,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"companion_id","","The companion ID of this body.",45,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_companion_id","","Set the companion ID of this body (may be reinitialized by nphysics).",45,null],[11,"generalized_velocity_mut","","The mutable generalized velocities of this body.",45,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"integrate","","Integrate the position of this body.",45,null],[11,"activate","","Force the activation of this body.",45,null],[11,"activate_with_energy","","Force the activation of this body with the given level of energy.",45,null],[11,"deactivate","","Put this body to sleep.",45,null],[11,"is_ground","","Returns `true` if this body is the ground.",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"handle","","The handle of this body.",46,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"parent_ndofs","","The number of degrees of freedom of the body containing this body part.",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"parent_companion_id","","The companion ID of the parent of this body part.",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_active","","Check if this body part is active.",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status_dependent_parent_ndofs","","The number of degrees of freedom (DOF) of the body containing this body part, taking its status into account.",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"parent_generalized_velocity","","The generalized velocities of the body containing this body part.",46,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"center_of_mass","","The center of mass of this body part.",46,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"position","","The position of this body part wrt. the ground.",46,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"velocity","","The velocity of this body part.",46,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"inertia","","The world-space inertia of this body part.",46,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"local_inertia","","The local-space inertia of this body part.",46,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"status_dependent_velocity","","The velocity of this body part, taking it status into account.",46,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"body_jacobian_mul_force","","Convert a force applied to the center of mass of this body part into generalized force.",46,null],[11,"inv_mass_mul_generalized_forces","","Convert generalized forces applied to this body part into generalized accelerations.",46,null],[11,"inv_mass_mul_force","","Convert a force applied to this body part's center of mass into generalized accelerations.",46,null],[11,"as_ref","","Retrieves an immutable reference to this body part.",47,{"inputs":[{"name":"self"}],"output":{"name":"bodypart"}}],[11,"apply_force","","Apply a force to this body part at the next frame.",47,{"inputs":[{"name":"self"},{"name":"force"}],"output":null}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bool"}}],[11,"hash","","",50,null],[11,"ground","","The unique identifier of the ground.",50,{"inputs":[],"output":{"name":"self"}}],[11,"is_ground","","Tests if this handle corresponds to the ground.",50,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Create a new empty set of bodies.",51,{"inputs":[],"output":{"name":"self"}}],[11,"len","","The number of bodies in this set.",51,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"are_same_body","","Check if the two given handles identify the same body.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"},{"name":"bodyhandle"}],"output":{"name":"bool"}}],[11,"update_kinematics","","Update the kinematics of all the bodies.",51,{"inputs":[{"name":"self"}],"output":null}],[11,"clear_dynamics","","Clear the dynamics of all the bodies.",51,{"inputs":[{"name":"self"}],"output":null}],[11,"update_dynamics","","Update the dynamics of all the bodies.",51,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"integrationparameters"},{"name":"multibodyworkspace"}],"output":null}],[11,"add_rigid_body","","Add a rigid body to the set and return its handle.",51,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"inertia"},{"name":"point"}],"output":{"name":"bodyhandle"}}],[11,"add_multibody_link","","Add a multibody link to the set and return its handle.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"},{"name":"j"},{"name":"vector"},{"name":"vector"},{"name":"inertia"},{"name":"point"}],"output":{"name":"bodyhandle"}}],[11,"remove_body","","Remove a body from this set.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":null}],[11,"remove_multibody_links","","Remove some multibody links.",51,null],[11,"contains","","Checks that the given handle identifies a valid body part.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bool"}}],[11,"body","","Reference to the body identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"body"}}],[11,"body_mut","","Mutable reference to the body identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodymut"}}],[11,"body_part","","Reference to the body part identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodypart"}}],[11,"body_part_mut","","Mutable reference to the body part identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodypartmut"}}],[11,"multibody","","Reference to the multibody containing the multibody link identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibody"],"name":"option"}}],[11,"multibody_mut","","Mutable reference to the multibody containing the multibody link identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibody"],"name":"option"}}],[11,"multibody_link","","Reference to the multibody link identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibodylinkref"],"name":"option"}}],[11,"multibody_link_mut","","Mutable reference to the multibody link identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibodylinkmut"],"name":"option"}}],[11,"rigid_body","","Reference to the rigid body identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["rigidbody"],"name":"option"}}],[11,"rigid_body_mut","","Mutable reference to the rigid body identified by `body`.",51,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["rigidbody"],"name":"option"}}],[11,"rigid_bodies","","Iterator yielding all the rigid bodies on this set.",51,{"inputs":[{"name":"self"}],"output":{"generics":["iter"],"name":"map"}}],[11,"rigid_bodies_mut","","Mutable iterator yielding all the rigid bodies on this set.",51,{"inputs":[{"name":"self"}],"output":{"generics":["itermut"],"name":"map"}}],[11,"multibodies","","Iterator yielding all the multibodies on this set.",51,{"inputs":[{"name":"self"}],"output":{"generics":["iter"],"name":"map"}}],[11,"multibodies_mut","","Mutable iterator yielding all the multibodies on this set.",51,{"inputs":[{"name":"self"}],"output":{"generics":["itermut"],"name":"map"}}],[11,"bodies_mut","","Mutable iterator yielding all the bodies on this set.",51,{"inputs":[{"name":"self"}],"output":{"name":"bodiesmut"}}],[11,"next","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["body"],"name":"option"}}],[11,"new","","Initializes data for a collider.",53,{"inputs":[{"name":"n"},{"name":"bodyhandle"},{"name":"usize"},{"name":"isometry"},{"name":"material"}],"output":{"name":"self"}}],[11,"body","","The handle of the body part this collider is attached to.",53,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"margin","","The collision margin surrounding this collider.",53,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"position_wrt_body","","The position of the collider relative to the body it is attached to.",53,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"material","","The material of this collider.",53,{"inputs":[{"name":"self"}],"output":{"name":"material"}}],[11,"handle","","The handle of the ground.",54,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"activation_status","","An inactive status.",54,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activate","","Does nothing.",54,{"inputs":[{"name":"self"}],"output":null}],[11,"activate_with_energy","","Does nothing.",54,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"deactivate","","Does nothing.",54,{"inputs":[{"name":"self"}],"output":null}],[11,"is_active","","Returns `false`.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_dynamic","","Returns `false`.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Returns `false`.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Returns `true`.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status","","Returns `BodyStatus::Static`.",54,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"companion_id","","The companion ID of the ground.",54,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_companion_id","","Sets the companion ID of the ground.",54,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"ndofs","","Returns 0.",54,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"generalized_velocity","","Returns an empty slice.",54,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity_mut","","Returns an empty slice.",54,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"generalized_acceleration","","Returns an empty slice.",54,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"integrate","","Does nothing.",54,{"inputs":[{"name":"self"},{"name":"integrationparameters"}],"output":null}],[11,"center_of_mass","","Returns the origin.",54,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"position","","Returns the identity.",54,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"velocity","","Returns zero.",54,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"inertia","","Returns zero.",54,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"local_inertia","","Returns zero.",54,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"body_jacobian_mul_force","","Does nothing.",54,null],[11,"inv_mass_mul_generalized_forces","","Does nothing.",54,null],[11,"inv_mass_mul_force","","Does nothing.",54,null],[11,"apply_force","","Does nothing.",54,{"inputs":[{"name":"self"},{"name":"force"}],"output":null}],[11,"new","","Creates a new multibody with no link.",55,{"inputs":[],"output":{"name":"self"}}],[11,"handle","","The handle of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"activation_status","","Informations regarding activation and deactivation (sleeping) of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activation_status_mut","","Mutable informations regarding activation and deactivation (sleeping) of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activate","","Force the activation of this multibody link.",55,{"inputs":[{"name":"self"}],"output":null}],[11,"activate_with_energy","","Force the activation of this multibody link with the given level of energy.",55,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"deactivate","","Put this multibody to sleep.",55,{"inputs":[{"name":"self"}],"output":null}],[11,"is_active","","Return `true` if this multibody is kinematic or dynamic and awake.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status","","The status of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"set_status","","Set the status of this body.",55,{"inputs":[{"name":"self"},{"name":"bodystatus"}],"output":null}],[11,"companion_id","","The companion ID of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_companion_id","","Set the companion ID of this multibody.",55,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"is_dynamic","","Whether or not the status of this multibody is dynamic.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Whether or not the status of this multibody is static.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Whether or not the status of this multibody is kinematic.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ndofs","","The total number of degrees of freedom of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"links","","Iterator through all the links of this multibody.alloc_jemalloc",55,{"inputs":[{"name":"self"}],"output":{"name":"multibodylinks"}}],[11,"link","","Get a reference to a specific multibody link.",55,{"inputs":[{"name":"self"},{"name":"multibodylinkid"}],"output":{"name":"multibodylinkref"}}],[11,"link_mut","","Get a mutable reference to a specific multibody link.",55,{"inputs":[{"name":"self"},{"name":"multibodylinkid"}],"output":{"name":"multibodylinkmut"}}],[11,"generalized_velocity","","The vector of generalized velocities of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity_slice","","The slice of generalized velocities of this multibody.",55,null],[11,"generalized_velocity_mut","","The mutable vector of generalized velocities of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"generalized_velocity_slice_mut","","The mutable slice of generalized velocities of this multibody.",55,null],[11,"generalized_acceleration","","The vector of generalized accelerations of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"damping","","The vector of damping applied to this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"damping_mut","","Mutable vector of damping applied to this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"impulses","","Generalized impulses applied to each degree of freedom.",55,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"remove_links","","Remove a set of links from this multibody.",55,null],[11,"integrate","","Integrate the position of all the links of this multibody.",55,{"inputs":[{"name":"self"},{"name":"integrationparameters"}],"output":null}],[11,"apply_displacement","","Apply a displacement to each degrees of freedom of this multibody.",55,null],[11,"clear_dynamics","","Reset the timestep-specific dynamic information of this multibody.",55,{"inputs":[{"name":"self"}],"output":null}],[11,"update_kinematics","","Updates the positions of the rigid bodies.",55,{"inputs":[{"name":"self"}],"output":null}],[11,"update_dynamics","","Computes the constant terms of the dynamics.",55,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"integrationparameters"},{"name":"multibodyworkspace"}],"output":null}],[11,"body_jacobian_mul_force","","Convert a force applied to the center of mass of the link `rb_id` into generalized force.",55,null],[11,"inv_mass_mul_generalized_forces","","Convert generalized forces applied to this multibody into generalized accelerations.",55,null],[11,"inv_mass_mul_force","","Convert a force applied to this multibody's link `rb_id` center of mass into generalized accelerations.",55,null],[11,"inv_mass_mul_unit_joint_force","","Convert a generalized force applied to le link `rb_id`'s degrees of freedom into generalized accelerations.",55,null],[11,"inv_mass_mul_joint_force","","Convert a generalized force applied to the link `rb_id`'s degrees of freedom into generalized accelerations.",55,null],[11,"augmented_mass","","The augmented mass (inluding gyroscropic and coriolis terms) in world-space of this multibody.",55,{"inputs":[{"name":"self"}],"output":{"name":"dmatrix"}}],[11,"constraints","","Generates the set of velocity and position constraints needed for joint limits and motors at each link of this multibody.",55,null],[11,"cache_impulses","","Store impulses computed by the solver for joint limits and motors.",55,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"next","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["multibodylinkref"],"name":"option"}}],[11,"new","","Create an empty workspace.",57,{"inputs":[],"output":{"name":"self"}}],[11,"resize","","Resize the workspace so it is enough for `nlinks` links.",57,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"multibodylinkid"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"multibodylinkid"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"multibodylinkid"}],"output":{"name":"bool"}}],[11,"ground","","The multibody link identifying the ground.",58,{"inputs":[],"output":{"name":"self"}}],[11,"is_root","","Return `true` if this link is at the root of the multibody.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_ground","","Return `true` if this link identifies the ground.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Creates a new mutable reference of a multibody link.",59,{"inputs":[{"name":"multibodylinkid"},{"name":"multibody"}],"output":{"name":"self"}}],[11,"handle","","The handle of this link.",59,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"as_ref","","Retrieve an immutable reference to this link.",59,{"inputs":[{"name":"self"}],"output":{"name":"multibodylinkref"}}],[11,"joint_mut","","Mutable reference to the joint attaching this link to its parent.",59,{"inputs":[{"name":"self"}],"output":{"name":"joint"}}],[11,"apply_force","","Apply a force to this link.",59,{"inputs":[{"name":"self"},{"name":"force"}],"output":null}],[11,"joint_velocity_mut","","Retriev the mutable generalized velocities of this link.",59,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"new","","Create a new reference to a multibody link.",60,{"inputs":[{"name":"multibodylinkid"},{"name":"multibody"}],"output":{"name":"self"}}],[11,"handle","","The handle of this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"joint","","Reference to the joint attaching this link to its parent.",60,{"inputs":[{"name":"self"}],"output":{"name":"joint"}}],[11,"center_of_mass","","Center of mass of this link wrt. the ground.",60,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"velocity","","Velocity at the center of mass of this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"joint_velocity","","Generalized velocities of this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"id","","The identifier of this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"multibodylinkid"}}],[11,"assembly_id","","The dynamic assembly identifier of this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"impulse_id","","The impulse cache identifier of this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"multibody","","Reference to the multibody containing this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"multibody"}}],[11,"inv_mass_mul_unit_joint_force","","Convert a generalized force applied to this link degrees of freedom into generalized accelerations.",60,null],[11,"inv_mass_mul_joint_force","","Convert a generalized force applied to this link degrees of freedom into generalized accelerations.",60,null],[11,"position","","The position of the center of mass of this link wrt. the ground.",60,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"body_jacobian_mul_force","","Convert a force applied to this link center of mass into generalized force.",60,null],[11,"inv_mass_mul_generalized_forces","","Convert generalized forces applied to the multibody containing this link into generalized accelerations.",60,null],[11,"inv_mass_mul_force","","Convert a force applied to this link's center of mass into generalized accelerations.",60,null],[11,"local_inertia","","The local inertia of this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"inertia","","The world-space inertia of this link.",60,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"new","","Create a new rigid body with the specified handle and dynamic properties.",61,{"inputs":[{"name":"bodyhandle"},{"name":"isometry"},{"name":"inertia"},{"name":"point"}],"output":{"name":"self"}}],[11,"activation_status","","Informations regarding activation and deactivation (sleeping) of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activation_status_mut","","Mutable informations regarding activation and deactivation (sleeping) of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"activationstatus"}}],[11,"activate","","Force the activation of this rigid body.",61,{"inputs":[{"name":"self"}],"output":null}],[11,"activate_with_energy","","Force the activation of this rigid body with the given level of energy.",61,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"deactivate","","Put this rigid body to sleep.",61,{"inputs":[{"name":"self"}],"output":null}],[11,"is_active","","Return `true` if this rigid body is kinematic or dynamic and awake.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"status","","The status of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"bodystatus"}}],[11,"set_status","","Set the status of this body.",61,{"inputs":[{"name":"self"},{"name":"bodystatus"}],"output":null}],[11,"companion_id","","The companion ID of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_companion_id","","Set the companion ID of this rigid body.",61,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"is_dynamic","","Whether or not the status of this rigid body is dynamic.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static","","Whether or not the status of this rigid body is static.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_kinematic","","Whether or not the status of this rigid body is kinematic.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"center_of_mass","","The center of mass of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"velocity","","The velocity of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"velocity"}}],[11,"set_velocity","","Set the velocity of this rigid body.",61,{"inputs":[{"name":"self"},{"name":"velocity"}],"output":null}],[11,"set_linear_velocity","","Set the linear velocity of this rigid body.",61,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"set_angular_velocity","","Set the angular velocity of this rigid body.",61,{"inputs":[{"name":"self"},{"name":"angularvector"}],"output":null}],[11,"clear_dynamics","","Reset the timestep-specific dynamic information of this rigid body.",61,{"inputs":[{"name":"self"}],"output":null}],[11,"update_dynamics","","Update the timestep-specific dynamic information of this rigid body.",61,{"inputs":[{"name":"self"},{"name":"vector"},{"name":"integrationparameters"}],"output":null}],[11,"local_inertia","","The rigid body inertia in local-space.",61,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"inertia","","The rigid body inertia in world-space.",61,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"augmented_mass","","The augmented mass (inluding gyroscropic terms) in world-space of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"inertia"}}],[11,"handle","","The handle of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"bodyhandle"}}],[11,"ndofs","","The number of degrees of freedom of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"generalized_velocity","","The generalized velocities of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"generalized_velocity_mut","","The mutable generalized velocities of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslicemut"}}],[11,"generalized_acceleration","","The generalized accelerations at each degree of freedom of this rigid body.",61,{"inputs":[{"name":"self"}],"output":{"name":"dvectorslice"}}],[11,"integrate","","Integrate the position of this rigid body.",61,{"inputs":[{"name":"self"},{"name":"integrationparameters"}],"output":null}],[11,"apply_displacement","","Apply a displacement to this rigid body.",61,{"inputs":[{"name":"self"},{"name":"velocity"}],"output":null}],[11,"apply_force","","Apply a force to this rigid body for the next timestep.",61,{"inputs":[{"name":"self"},{"name":"force"}],"output":null}],[11,"position","","The position of this rigid body wrt. the ground.",61,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"body_jacobian_mul_force","","Convert a force applied to this rigid body center of mass into generalized force.",61,null],[11,"inv_mass_mul_generalized_forces","","Convert generalized forces applied to this rigid body into generalized accelerations.",61,null],[11,"inv_mass_mul_force","","Convert a force applied to this rigid body's center of mass into generalized accelerations.",61,null],[6,"Collider","","Type of a collider.",null,null],[6,"ColliderHandle","","Type of the handle of a collider.",null,null],[6,"Colliders","","Type of a reference to a collider.",null,null],[6,"Sensor","","Type of a sensor.",null,null],[6,"SensorHandle","","Type of the handle of a sensor.",null,null],[0,"solver","nphysics3d","Constraint solver.",null,null],[3,"MoreauJeanSolver","nphysics3d::solver","Moreau-Jean time-stepping scheme.",null,null],[3,"BilateralConstraint","","A bilateral (equality) constraint between two bodies.",null,null],[12,"impulse","","The impulse applied by this constraint.",62,null],[12,"r","","The scaling parameter of the SOR-prox method.",62,null],[12,"rhs","","The target velocity change this constraint must apply.",62,null],[12,"limits","","Limits of impulse applicable by this constraint.",62,null],[12,"impulse_id","","The index of the impulse used for its storage in an impuse cache.",62,null],[12,"assembly_id1","","The assembly index of the first body.",62,null],[12,"assembly_id2","","The assembly index of the second body.",62,null],[12,"j_id1","","Index of the first entry of the jacobian of the constraint affecting the first body.",62,null],[12,"j_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",62,null],[12,"wj_id1","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the first body.",62,null],[12,"wj_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",62,null],[12,"ndofs1","","Number of degree of freedom of the first body.",62,null],[12,"ndofs2","","Number of degree of freedom of the second body.",62,null],[3,"BilateralGroundConstraint","","A bilateral (equality) constraint between a dynamic body and one without any degrees of freedom.",null,null],[12,"impulse","","The impulse applied by the constraint.",63,null],[12,"r","","The scaling parameter used by the SOR-prox method.",63,null],[12,"rhs","","The target velocity change this constraint must apply.",63,null],[12,"limits","","Limits of impulse applicable by this constraint.",63,null],[12,"impulse_id","","The index of the impulse used for its storage in an impuse cache.",63,null],[12,"assembly_id","","The assembly index of the dynamic body.",63,null],[12,"j_id","","Index of the first entry of the jacobian of the constraint affecting the dynamic body.",63,null],[12,"wj_id","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the dynamic body.",63,null],[12,"ndofs","","Number of degree of freedom of the dynamic body.",63,null],[3,"ConstraintGeometry","","Logical information of the geometry of a constraint.",null,null],[12,"j_id1","","Index of the first entry of the jacobian of the constraint affecting the first body.",64,null],[12,"j_id2","","Index of the first entry of the jacobian of the constraint affecting the second body.",64,null],[12,"wj_id1","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the first body.",64,null],[12,"wj_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",64,null],[12,"ndofs1","","Number of degree of freedom of the first body.",64,null],[12,"ndofs2","","Number of degree of freedom of the second body.",64,null],[12,"r","","Scaling parameter of the SOR-prox method.",64,null],[3,"UnilateralConstraint","","A unilateral (inequality) consraint.",null,null],[12,"impulse","","The impulse applied by this constraint.",65,null],[12,"r","","The scaling parameter of the SOR-prox method.",65,null],[12,"rhs","","The target velocity change this constraint must apply.",65,null],[12,"impulse_id","","The index of the impulse used for its storage in an impuse cache.",65,null],[12,"assembly_id1","","The assembly index of the first body.",65,null],[12,"assembly_id2","","The assembly index of the second body.",65,null],[12,"j_id1","","Index of the first entry of the jacobian of the constraint affecting the first body.",65,null],[12,"j_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",65,null],[12,"wj_id1","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the first body.",65,null],[12,"wj_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",65,null],[12,"ndofs1","","Number of degree of freedom of the first body.",65,null],[12,"ndofs2","","Number of degree of freedom of the second body.",65,null],[3,"UnilateralGroundConstraint","","A unilateral (inequality) constraint between a dynamic body and one without any degrees of freedom.",null,null],[12,"impulse","","The impulse applied by the constraint.",66,null],[12,"r","","The scaling parameter used by the SOR-prox method.",66,null],[12,"rhs","","The target velocity change this constraint must apply.",66,null],[12,"impulse_id","","The index of the impulse used for its storage in an impuse cache.",66,null],[12,"assembly_id","","The assembly index of the dynamic body.",66,null],[12,"j_id","","Index of the first entry of the jacobian of the constraint affecting the dynamic body.",66,null],[12,"wj_id","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the dynamic body.",66,null],[12,"ndofs","","Number of degree of freedom of the dynamic body.",66,null],[3,"GenericNonlinearConstraint","","A generic non-linear position constraint.",null,null],[12,"body1","","The first body affected by the constraint.",67,null],[12,"body2","","The second body affected by the constraint.",67,null],[12,"is_angular","","Whether this constraint affects the bodies translation or orientation.",67,null],[12,"dim1","","Number of degree of freedom of the first body.",67,null],[12,"dim2","","Number of degree of freedom of the second body.",67,null],[12,"wj_id1","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the first body.",67,null],[12,"wj_id2","","Index of the first entry of the constraint jacobian multiplied by the inverse mass of the second body.",67,null],[12,"rhs","","The target position change this constraint must apply.",67,null],[12,"r","","The scaling parameter of the SOR-prox method.",67,null],[3,"MultibodyJointLimitsNonlinearConstraintGenerator","","A non-linear position constraint generator to enforce multibody joint limits.",null,null],[3,"NonlinearUnilateralConstraint","","A non-linear position-based non-penetration constraint.",null,null],[12,"r","","The scaling parameter of the SOR-prox method.",68,null],[12,"rhs","","The target position change this constraint must apply.",68,null],[12,"ndofs1","","Number of degree of freedom of the first body.",68,null],[12,"body1","","The first body affected by the constraint.",68,null],[12,"ndofs2","","Number of degree of freedom of the second body.",68,null],[12,"body2","","The second body affected by the constraint.",68,null],[12,"kinematic","","The kinematic information used to update the contact location.",68,null],[12,"normal1","","The contact normal on the local space of `self.body1`.",68,null],[12,"normal2","","The contact normal on the local space of `self.body1`.",68,null],[3,"SignoriniCoulombPyramidModel","","A contact model generating one non-penetration constraint and two friction constraints per contact.",null,null],[3,"SignoriniModel","","A contact model generating one non-penetration constraint per contact.",null,null],[3,"IntegrationParameters","","Parameters for a time-step of the physics engine.",null,null],[12,"dt","","The timestep (default: `1.0 / 60.0`)",69,null],[12,"erp","","The Error Reduction Parameter in `[0, 1]` is the proportion of the positional error to be corrected at each time step (default: `0.2`).",69,null],[12,"warmstart_coeff","","Each cached impulse are multiplied by this coefficient in `[0, 1]` when they are re-used to initialize the solver (default `1.0`).",69,null],[12,"restitution_velocity_threshold","","Contacts at points where the involved bodies have a relative velocity smaller than this threshold wont be affected by the restitution force (default: `1.0`).",69,null],[12,"allowed_linear_error","","Ammount of penetration the engine wont attempt to correct (default: `0.001m`).",69,null],[12,"allowed_angular_error","","Ammount of angular drift of joint limits the engine wont attempt to correct (default: `0.001rad`).",69,null],[12,"max_linear_correction","","Maximum linear correction during one step of the non-linear position solver (default: `100.0`).",69,null],[12,"max_angular_correction","","Maximum angular correction during one step of the non-linear position solver (default: `0.2`).",69,null],[12,"max_stabilization_multiplier","","Maximum nonlinera SOR-prox scaling parameter when the constraint correction direction is close to the kernel of the involved multibody's jacobian (default: `0.2`).",69,null],[12,"max_velocity_iterations","","Maximum number of iterations performed by the velocity constraints solver.",69,null],[12,"max_position_iterations","","Maximum number of iterations performed by the position-based constraints solver.",69,null],[3,"ImpulseCache","","A cache for impulses.",null,null],[3,"ConstraintSet","","A set of all velocity constraints and non-linear position-based constraints.",null,null],[12,"velocity","","The velocity constraints constructed.",70,null],[12,"position","","The position constraints constructed.",70,null],[3,"SORProx","","A SOR-Prox velocity-based constraints solver.",null,null],[3,"NonlinearSORProx","","Non-linear position-based consraint solver using the SOR-Prox approach.",null,null],[4,"ImpulseLimits","","Limits of impulse applicable by a bilateral constraint.",null,null],[13,"Independent","","Limits that are absolute threshold.",71,null],[12,"min","nphysics3d::solver::ImpulseLimits","The lower bound of the impulse.",71,null],[12,"max","","The upper bound of the impulse.",71,null],[13,"Dependent","nphysics3d::solver","Limit proportional to the impulse of another unilateral constraint.",71,null],[12,"dependency","nphysics3d::solver::ImpulseLimits","Index of the unilateral constraint which this limit depends on.",71,null],[12,"coeff","","The coefficient by which the dependent impulse is multiplied to obtain the impulse limit.",71,null],[0,"helper","nphysics3d::solver","Utilities for computing velocity and position constraints.",null,null],[4,"ForceDirection","nphysics3d::solver::helper","The direction of a force.",null,null],[13,"Linear","","A linear force toward a direction.",72,null],[13,"Angular","","A torque wrt. an axis.",72,null],[5,"fill_constraint_geometry","","Fills all the jacobians (and the jacobians multiplied by the invers augmented mass matricxs) for a constraint applying a force at the point `center` (relative to the body part's center of mass) and the direction `dir`.",null,null],[5,"constraint_pair_geometry","","Fills all the jacobians (and the jacobians multiplied by the invers augmented mass matricxs) for a constraint applying a force at the points `center1, center2` and the direction `dir`.",null,null],[5,"constraint_pair_velocity","","Compute the generalized relative velocity for at the given points and along a given direction.",null,null],[5,"constraints_are_ground_constraints","","Test sif a constraint between the two given bodies should be a ground constraint (a constraint between a dynamic body and one without any degree of freedom).",null,{"inputs":[{"name":"bodypart"},{"name":"bodypart"}],"output":{"name":"bool"}}],[5,"cancel_relative_linear_velocity_wrt_axis","","Generates velocity constraints to cancel the relative linear velocity of two body parts wrt the given axis.",null,null],[5,"cancel_relative_linear_velocity","","Generates velocity constraints to cancel the relative linear velocity of two body parts.",null,null],[5,"cancel_relative_translation_wrt_axis","","Generate position constraints to cancel the relative translation of two bodies wrt the given axis.",null,null],[5,"cancel_relative_translation","","Generate position constraints to cancel the relative translation of two bodies.",null,null],[5,"cancel_relative_angular_velocity_wrt_axis","","Generate velocity constraints to cancel the relative angular velocity of two bodies wrt. the given axis.",null,null],[5,"cancel_relative_angular_velocity","","Generate velocity constraints to cancel the relative angular velocity of two bodies.",null,null],[5,"cancel_relative_rotation","","Generate position constraints to cancel the relative rotation of two bodies.",null,null],[5,"restrict_relative_angular_velocity_to_axis","","Generate velocity constraints to cancel the relative angular velocity of two bodies along all axis except the one provided.",null,null],[5,"align_axis","","Generate position constraints to moved the body parts such that the given axis will become aligned.",null,null],[5,"restrict_relative_linear_velocity_to_axis","","Generate velocity constraints to cancel the relative linear velocity of two bodies along all axis except the one provided.",null,null],[5,"project_anchor_to_axis","","Generate position constraints to project `anchor2` into the axis with direction `axis1` and passing through the `anchor1`.",null,null],[5,"restore_angle_between_axis","","Generate position constraints to ensure the two given axis are seperated by the given angle.",null,null],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"forcedirection"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"neg","","",72,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"new","nphysics3d::solver","Create a new empty cache.",73,{"inputs":[],"output":{"name":"self"}}],[11,"clear","","Clear the cache.",73,{"inputs":[{"name":"self"}],"output":null}],[11,"contains","","Test if the cache already contains the specified contact.",73,{"inputs":[{"name":"self"},{"name":"generationalid"}],"output":{"name":"bool"}}],[11,"get","","Get the impulse stored for the specified contact.",73,{"inputs":[{"name":"self"},{"name":"generationalid"}],"output":{"name":"n"}}],[11,"entry_id","","Retrieve the index on the cache vector associated to the given contact.",73,{"inputs":[{"name":"self"},{"name":"generationalid"}],"output":{"name":"usize"}}],[11,"index","","",73,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"index_mut","","",73,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"new","","Create a new time-stepping scheme with the given contact model.",74,{"inputs":[{"generics":["contactmodel"],"name":"box"}],"output":{"name":"self"}}],[11,"set_contact_model","","Sets the contact model.",74,{"inputs":[{"name":"self"},{"generics":["contactmodel"],"name":"box"}],"output":null}],[11,"step","","Perform one step of the time-stepping scheme.",74,null],[11,"new","","Creates a set of integration parameters with the given values.",69,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"default","","",69,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Initialize a new signorini-coulomb-pyramid contact model.",75,{"inputs":[],"output":{"name":"self"}}],[11,"num_velocity_constraints","","",75,{"inputs":[{"name":"self"},{"name":"collidercontactmanifold"}],"output":{"name":"usize"}}],[11,"constraints","","",75,null],[11,"cache_impulses","","",75,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"new","","Create a new signorini contact model.",76,{"inputs":[],"output":{"name":"self"}}],[11,"build_velocity_constraint","","Build a non-penetration velocity-based constraint for the given contact.",76,null],[11,"is_constraint_active","","Checks if the given constraint is active.",76,{"inputs":[{"name":"trackedcontact"},{"name":"collidercontactmanifold"}],"output":{"name":"bool"}}],[11,"build_position_constraint","","Builds non-linear position-based non-penetration constraints for the given contact manifold.",76,{"inputs":[{"name":"bodyset"},{"name":"collidercontactmanifold"},{"name":"trackedcontact"},{"name":"constraintset"}],"output":null}],[11,"num_velocity_constraints","","",76,{"inputs":[{"name":"self"},{"name":"collidercontactmanifold"}],"output":{"name":"usize"}}],[11,"constraints","","",76,null],[11,"cache_impulses","","",76,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"constraintgeometry"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a costraint geometry initialized to zero.",64,{"inputs":[],"output":{"name":"self"}}],[11,"is_ground_constraint","","Return `true` if this constraint involve a body with zero degrees of freedom.",64,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Create a new unilateral constraint.",65,{"inputs":[{"name":"constraintgeometry"},{"name":"usize"},{"name":"usize"},{"name":"n"},{"name":"n"},{"name":"usize"}],"output":{"name":"self"}}],[11,"new","","Create a new unilateral ground constraint.",66,{"inputs":[{"name":"constraintgeometry"},{"name":"usize"},{"name":"usize"},{"name":"n"},{"name":"n"},{"name":"usize"}],"output":{"name":"self"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"impulselimits"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new bilateral constraint.",62,{"inputs":[{"name":"constraintgeometry"},{"name":"usize"},{"name":"usize"},{"name":"impulselimits"},{"name":"n"},{"name":"n"},{"name":"usize"}],"output":{"name":"self"}}],[11,"new","","Create a new unilateral ground constraint.",63,{"inputs":[{"name":"constraintgeometry"},{"name":"usize"},{"name":"usize"},{"name":"impulselimits"},{"name":"n"},{"name":"n"},{"name":"usize"}],"output":{"name":"self"}}],[11,"new","","Initialize a new nonlinear constraint.",67,{"inputs":[{"name":"bodyhandle"},{"name":"bodyhandle"},{"name":"bool"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Create a new nonlinear position-based non-penetration constraint.",68,{"inputs":[{"name":"bodyhandle"},{"name":"usize"},{"name":"bodyhandle"},{"name":"usize"},{"generics":["vector"],"name":"unit"},{"generics":["vector"],"name":"unit"},{"name":"contactkinematic"}],"output":{"name":"self"}}],[11,"new","","Creates the constraint generator from the given multibody link.",77,{"inputs":[{"name":"bodyhandle"}],"output":{"name":"self"}}],[11,"num_position_constraints","","",77,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[11,"position_constraint","","",77,null],[11,"new","","Create a new empty set of constraints.",70,{"inputs":[],"output":{"name":"self"}}],[11,"len","","The total number of constraints on this set.",70,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clear","","Remove all constraints from this set.",70,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Initialize a new velocity-based constraints solver.",78,{"inputs":[],"output":{"name":"self"}}],[11,"solve","","Solve the given set of constraints.",78,null],[11,"new","","Initialize a new nonlinear SOR-Prox solver.",79,{"inputs":[],"output":{"name":"self"}}],[11,"solve","","Solve a set of nonlinear position-based constraints.",79,null],[8,"NonlinearConstraintGenerator","","Implemented by structures that generate non-linear constraints.",null,null],[10,"num_position_constraints","","Maximum of non-linear position constraint this generater needs to output.",80,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"usize"}}],[10,"position_constraint","","Generate the `i`-th position constraint of this generator.",80,null],[8,"ContactModel","","The modeling of a contact.",null,null],[10,"num_velocity_constraints","","Maximum number of velocity constraint to be generated for each contact.",81,{"inputs":[{"name":"self"},{"name":"collidercontactmanifold"}],"output":{"name":"usize"}}],[10,"constraints","","Generate all constraints for the given contact manifolds.",81,null],[10,"cache_impulses","","Stores all the impulses found by the solver into a cache for warmstarting.",81,{"inputs":[{"name":"self"},{"name":"constraintset"}],"output":null}],[0,"utils","nphysics3d","Miscellaneous utilities.",null,null],[3,"DeterministicState","nphysics3d::utils","A hasher builder that creates `DefaultHasher` with default keys.",null,null],[0,"union_find","","The union find algorithm.",null,null],[3,"UnionFindSet","nphysics3d::utils::union_find","An element used by the union-find algorithm.",null,null],[5,"find","","Performs the `find` part of the union-find algorithm.",null,null],[5,"union","","Performs the `union` part of the union-find algorithm.",null,null],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"unionfindset"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"new","","Creates a new `UnionFindSet`.",82,{"inputs":[{"name":"usize"}],"output":{"name":"unionfindset"}}],[11,"reinit","","Reinitialize this set.",82,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"new","nphysics3d::utils","Creates a new `DeterministicState` that builds `DefaultHasher` with default keys.",83,{"inputs":[],"output":{"name":"deterministicstate"}}],[11,"build_hasher","","",83,{"inputs":[{"name":"self"}],"output":{"name":"defaulthasher"}}],[8,"GeneralizedCross","","This is a non-standard generalization of the cross product design exclusively to group the 3D cross product and the 2D perpendicular product behind the same interface.",null,null],[16,"Rhs","","The right-hand-side of this cross product.",84,null],[16,"CrossVector","","The result type of the this (non-standard) generalized cross product.",84,null],[16,"CrossMatrix","","The matrix representation of this (non-standard) generalized cross product.",84,null],[16,"CrossMatrixTr","","The transposed matrix representation of this (non-standard) generalized cross product.",84,null],[10,"gcross","","Computes this (non-standard) generalized cross product.",84,null],[10,"gcross_matrix","","Computes the matrix represenattion of this (non-standard) generalized cross product.",84,null],[10,"gcross_matrix_tr","","Computes the transposed matrix represenattion of this (non-standard) generalized cross product.",84,null],[8,"IndexMut2","","Methods for simultaneously indexing a container with two distinct indices.",null,null],[10,"index_mut2","","Gets mutable references to two distinct elements of the container.",85,null],[11,"index_mut_const","","Gets a mutable reference to one element, and immutable reference to a second one.",85,null],[0,"volumetric","nphysics3d","Volume and inertia tensor computation.",null,null],[5,"ball_area","nphysics3d::volumetric","The area of a ball.",null,{"inputs":[{"name":"n"}],"output":{"name":"n"}}],[5,"ball_center_of_mass","","The center of mass of a ball.",null,{"inputs":[],"output":{"name":"point"}}],[5,"ball_unit_angular_inertia","","The unit angular inertia of a ball.",null,{"inputs":[{"name":"n"}],"output":{"name":"angularinertia"}}],[5,"ball_volume","","The volume of a ball.",null,{"inputs":[{"name":"n"}],"output":{"name":"n"}}],[5,"cuboid_area","","The area of a cuboid.",null,{"inputs":[{"name":"vector"}],"output":{"name":"n"}}],[5,"cuboid_center_of_mass","","The center of mass of a cuboid.",null,{"inputs":[],"output":{"name":"point"}}],[5,"cuboid_unit_angular_inertia","","The unit angular inertia of a cuboid.",null,{"inputs":[{"name":"vector"}],"output":{"name":"angularinertia"}}],[5,"cuboid_volume","","The volume of a cuboid.",null,{"inputs":[{"name":"vector"}],"output":{"name":"n"}}],[5,"convex_hull_area","","The area of a convex hull.",null,null],[5,"convex_hull_center_of_mass","","The center of mass of the convex hull of a set of points.",null,null],[5,"convex_hull_unit_angular_inertia","","The angular inertia of the convex hull of a set of points.",null,null],[5,"convex_hull_volume","","The volume of the convex hull of a set of points.",null,null],[5,"convex_mesh_area_unchecked","","The area of a convex mesh.",null,{"inputs":[{"name":"trimesh"}],"output":{"name":"n"}}],[5,"convex_mesh_mass_properties_unchecked","","The mass properties of a convex mesh.",null,null],[5,"convex_mesh_volume_and_center_of_mass_unchecked","","The volume and center of mass of a 3D convex mesh.",null,null],[8,"InertiaTensor","","Trait implemented by inertia tensors.",null,null],[10,"apply","","Applies this inertia tensor to a vector.",86,{"inputs":[{"name":"self"},{"name":"av"}],"output":{"name":"av"}}],[10,"to_world_space","","Transforms this inertia tensor from local space to world space.",86,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"self"}}],[10,"to_relative_wrt_point","","Computes this inertia tensor relative to a given point.",86,{"inputs":[{"name":"self"},{"name":"n"},{"name":"p"}],"output":{"name":"self"}}],[8,"Volumetric","","Trait implemented by objects which have a mass, a center of mass, and an inertia tensor.",null,null],[10,"area","","Computes the area of this object.",87,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[10,"volume","","Computes the volume of this object.",87,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[10,"center_of_mass","","Computes the center of mass of this object.",87,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[10,"unit_angular_inertia","","Computes the angular inertia tensor of this object.",87,{"inputs":[{"name":"self"}],"output":{"name":"angularinertia"}}],[11,"mass","","Given its density, this computes the mass of this object.",87,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"n"}}],[11,"angular_inertia","","Given its mass, this computes the angular inertia of this object.",87,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"angularinertia"}}],[11,"mass_properties","","Given its density, this computes the mass, center of mass, and inertia tensor of this object.",87,null],[11,"inertia","","",87,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"inertia"}}],[0,"world","nphysics3d","The physics world.",null,null],[3,"World","nphysics3d::world","The physics world.",null,null],[11,"new","","Creates a new physics world with default parameters.",88,{"inputs":[],"output":{"name":"self"}}],[11,"disable_performance_counters","","Disable the perfomance counters that measure various times and statistics during a timestep.",88,{"inputs":[{"name":"self"}],"output":null}],[11,"enable_performance_counters","","Enable the perfomance counters that measure various times and statistics during a timestep.",88,{"inputs":[{"name":"self"}],"output":null}],[11,"performance_counters","","Retrieve the perfomance counters that measure various times and statistics during a timestep.",88,{"inputs":[{"name":"self"}],"output":{"name":"counters"}}],[11,"set_contact_model","","Set the contact model for all contacts.",88,{"inputs":[{"name":"self"},{"name":"c"}],"output":null}],[11,"integration_parameters","","Retrieve a reference to the parameters for the integration.",88,{"inputs":[{"name":"self"}],"output":{"name":"integrationparameters"}}],[11,"integration_parameters_mut","","Retrieve a mutable reference to the parameters for the integration.",88,{"inputs":[{"name":"self"}],"output":{"name":"integrationparameters"}}],[11,"timestep","","Retrieve the timestep used for the integration.",88,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"set_timestep","","Sets the timestep used for the integration.",88,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"activate_body","","Activate the given body.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":null}],[11,"add_constraint","","Add a constraints to the physics world and retrieves its handle.",88,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"constrainthandle"}}],[11,"constraint","","Get a reference to the specified constraint.",88,{"inputs":[{"name":"self"},{"name":"constrainthandle"}],"output":{"name":"jointconstraint"}}],[11,"constraint_mut","","Get a mutable reference to the specified constraint.",88,{"inputs":[{"name":"self"},{"name":"constrainthandle"}],"output":{"name":"jointconstraint"}}],[11,"remove_constraint","","Remove the specified constraint from the world.",88,{"inputs":[{"name":"self"},{"name":"constrainthandle"}],"output":{"generics":["jointconstraint"],"name":"box"}}],[11,"add_force_generator","","Add a force generator to the world.",88,{"inputs":[{"name":"self"},{"name":"g"}],"output":{"name":"forcegeneratorhandle"}}],[11,"force_generator","","Retrieve a reference to the specified force generator.",88,{"inputs":[{"name":"self"},{"name":"forcegeneratorhandle"}],"output":{"name":"forcegenerator"}}],[11,"force_generator_mut","","Retrieve a mutable reference to the specified force generator.",88,{"inputs":[{"name":"self"},{"name":"forcegeneratorhandle"}],"output":{"name":"forcegenerator"}}],[11,"remove_force_generator","","Remove the specified force generator from the world.",88,{"inputs":[{"name":"self"},{"name":"forcegeneratorhandle"}],"output":{"generics":["forcegenerator"],"name":"box"}}],[11,"set_gravity","","Set the gravity.",88,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"step","","Execute one time step of the physics simulation.",88,{"inputs":[{"name":"self"}],"output":null}],[11,"remove_bodies","","Remove the specified bodies.",88,null],[11,"remove_multibody_links","","Remove several links of a single multibody.",88,null],[11,"add_rigid_body","","Add a rigid body to the world and retrieve its handle.",88,{"inputs":[{"name":"self"},{"name":"isometry"},{"name":"inertia"},{"name":"point"}],"output":{"name":"bodyhandle"}}],[11,"add_multibody_link","","Add a multibody link to the world and retrieve its handle.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"},{"name":"j"},{"name":"vector"},{"name":"vector"},{"name":"inertia"},{"name":"point"}],"output":{"name":"bodyhandle"}}],[11,"add_collider","","Add a collider to the world and retrieve its handle.",88,{"inputs":[{"name":"self"},{"name":"n"},{"name":"shapehandle"},{"name":"bodyhandle"},{"name":"isometry"},{"name":"material"}],"output":{"name":"colliderhandle"}}],[11,"add_sensor","","Add a sensor to the world and retrieve its handle.",88,{"inputs":[{"name":"self"},{"name":"shapehandle"},{"name":"bodyhandle"},{"name":"isometry"}],"output":{"name":"sensorhandle"}}],[11,"body_part","","Get a reference to the specified body part.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodypart"}}],[11,"body","","Get a reference to the specified body.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"body"}}],[11,"body_mut","","Get a mutable reference to the specified body.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"name":"bodymut"}}],[11,"multibody","","Get a reference to the multibody containing the specified multibody link.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibody"],"name":"option"}}],[11,"multibody_mut","","Get a mutable reference to the multibody containing the specified multibody link.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibody"],"name":"option"}}],[11,"multibody_link","","Get a reference to the specified multibody link.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibodylinkref"],"name":"option"}}],[11,"multibody_link_mut","","Get a mutable reference to the specified multibody link.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["multibodylinkmut"],"name":"option"}}],[11,"rigid_body","","Get a reference to the specified rigid body.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["rigidbody"],"name":"option"}}],[11,"rigid_body_mut","","Get a mutable reference to the specified rigid body.",88,{"inputs":[{"name":"self"},{"name":"bodyhandle"}],"output":{"generics":["rigidbody"],"name":"option"}}],[11,"collision_world","","Reference to the underlying collision world.",88,{"inputs":[{"name":"self"}],"output":{"name":"collisionworld"}}],[11,"collision_world_mut","","Mutable reference to the underlying collision world.",88,{"inputs":[{"name":"self"}],"output":{"name":"collisionworld"}}],[11,"collider","","Get a mutable reference to the specified collider.",88,{"inputs":[{"name":"self"},{"name":"colliderhandle"}],"output":{"generics":["collider"],"name":"option"}}],[11,"colliders","","An iterator through all the colliders on this collision world.",88,{"inputs":[{"name":"self"}],"output":{"name":"colliders"}}],[11,"contact_events","","An iterator through all the contact events generated during the last execution of `self.step()`.",88,{"inputs":[{"name":"self"}],"output":{"name":"contactevents"}}],[11,"proximity_events","","An iterator through all the proximity events generated during the last execution of `self.step()`.",88,{"inputs":[{"name":"self"}],"output":{"name":"proximityevents"}}],[6,"CollisionWorld","","Type of the collision world used by nphysics.",null,null],[0,"math","nphysics3d","Compilation flags dependent aliases for mathematical types.",null,null],[6,"Dim","nphysics3d::math","The dimension of the ambiant space.",null,null],[6,"SpatialDim","","The dimension of a spatial vector.",null,null],[6,"AngularDim","","The dimension of the rotations.",null,null],[6,"Point","","The point type.",null,null],[6,"AngularVector","","The angular vector type.",null,null],[6,"Vector","","The vector type.",null,null],[6,"SpatialVector","","The vector type with dimension `SpatialDim × 1`.",null,null],[6,"Orientation","","The orientation type.",null,null],[6,"Isometry","","The transformation matrix type.",null,null],[6,"Rotation","","The rotation matrix type.",null,null],[6,"Translation","","The translation type.",null,null],[6,"Velocity","","The velocity type combining the linear velocity and the angular velocity.",null,null],[6,"Force","","The force type combining a linear force and a torque.",null,null],[6,"AngularInertia","","The inertia tensor type.",null,null],[6,"Inertia","","The inertia type.",null,null],[6,"InertiaMatrix","","The inertia matrix type.",null,null],[6,"SpatialMatrix","","Square matrix with dimension `SpatialDim × SpatialDim`.",null,null],[6,"Jacobian","","The type of a constraint jacobian in twist coordinates.",null,null],[6,"JacobianSlice","","The type of a slice of the constraint jacobian in twist coordinates.",null,null],[6,"JacobianSliceMut","","The type of a mutable slice of the constraint jacobian in twist coordinates.",null,null],[17,"SPATIAL_DIM","","The maximum number of possible rotations and translations of a rigid body.",null,null],[17,"ANGULAR_DIM","","The maximum number of possible rotations of a rigid body.",null,null],[17,"DIM","","The maximum number of possible translations of a rigid body.",null,null],[11,"is","nphysics3d::force_generator","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",15,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",15,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",15,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",15,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"nimpulses","nphysics3d::joint","The maximum number of impulses needed by this joints for its constraints.",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"num_velocity_constraints","","Maximum number of velocity constrains that can be generated by this joint.",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"velocity_constraints","","Initialize and generate velocity constraints to enforce, e.g., joint limits and motors.",40,null],[11,"num_position_constraints","","The maximum number of non-linear position constraints that can be generated by this joint.",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"position_constraint","","Initialize and generate the i-th position constraints to enforce, e.g., joint limits.",40,null],[11,"is","","",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",40,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",40,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",40,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",40,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"is","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",41,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",41,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",41,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",41,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"is_active","","Return `true` if the constraint is active.",42,{"inputs":[{"name":"self"},{"name":"bodyset"}],"output":{"name":"bool"}}],[11,"is","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",42,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",42,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",42,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",42,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"is","nphysics3d::solver","",81,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref_unchecked","","",81,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_ref","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_mut_unchecked","","",81,{"inputs":[{"name":"self"}],"output":{"name":"_t"}}],[11,"downcast_mut","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["typemismatch"],"name":"result"}}],[11,"downcast_unchecked","","",81,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"downcast","","",81,{"inputs":[{"name":"box"}],"output":{"generics":["box","downcasterror"],"name":"result"}}],[11,"index_mut_const","nphysics3d::utils","Gets a mutable reference to one element, and immutable reference to a second one.",85,null],[11,"mass","nphysics3d::volumetric","Given its density, this computes the mass of this object.",87,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"n"}}],[11,"angular_inertia","","Given its mass, this computes the angular inertia of this object.",87,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"angularinertia"}}],[11,"mass_properties","","Given its density, this computes the mass, center of mass, and inertia tensor of this object.",87,null],[11,"inertia","","",87,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"inertia"}}]],"paths":[[3,"Velocity2"],[3,"Velocity3"],[3,"Force2"],[3,"Force3"],[3,"Inertia2"],[3,"Inertia3"],[3,"CollisionDetectionCounters"],[3,"SolverCounters"],[3,"StagesCounters"],[3,"Timer"],[3,"Counters"],[3,"ColliderContactManifold"],[3,"ActivationManager"],[3,"ConstantAcceleration"],[3,"Spring"],[8,"ForceGenerator"],[3,"JointMotor"],[3,"CartesianJoint"],[3,"FixedJoint"],[3,"FreeJoint"],[3,"PrismaticJoint"],[3,"RevoluteJoint"],[3,"BallJoint"],[3,"CylindricalJoint"],[3,"HelicalJoint"],[3,"PinSlotJoint"],[3,"PlanarJoint"],[3,"RectangularJoint"],[3,"UniversalJoint"],[3,"CartesianConstraint"],[3,"FixedConstraint"],[3,"MouseConstraint"],[3,"PrismaticConstraint"],[3,"RevoluteConstraint"],[3,"BallConstraint"],[3,"CylindricalConstraint"],[3,"PinSlotConstraint"],[3,"PlanarConstraint"],[3,"RectangularConstraint"],[3,"UniversalConstraint"],[8,"Joint"],[8,"UnitJoint"],[8,"JointConstraint"],[3,"Material"],[4,"Body"],[4,"BodyMut"],[4,"BodyPart"],[4,"BodyPartMut"],[4,"BodyStatus"],[3,"ActivationStatus"],[3,"BodyHandle"],[3,"BodySet"],[3,"Bodies"],[3,"ColliderData"],[3,"Ground"],[3,"Multibody"],[3,"MultibodyLinks"],[3,"MultibodyWorkspace"],[3,"MultibodyLinkId"],[3,"MultibodyLinkMut"],[3,"MultibodyLinkRef"],[3,"RigidBody"],[3,"BilateralConstraint"],[3,"BilateralGroundConstraint"],[3,"ConstraintGeometry"],[3,"UnilateralConstraint"],[3,"UnilateralGroundConstraint"],[3,"GenericNonlinearConstraint"],[3,"NonlinearUnilateralConstraint"],[3,"IntegrationParameters"],[3,"ConstraintSet"],[4,"ImpulseLimits"],[4,"ForceDirection"],[3,"ImpulseCache"],[3,"MoreauJeanSolver"],[3,"SignoriniCoulombPyramidModel"],[3,"SignoriniModel"],[3,"MultibodyJointLimitsNonlinearConstraintGenerator"],[3,"SORProx"],[3,"NonlinearSORProx"],[8,"NonlinearConstraintGenerator"],[8,"ContactModel"],[3,"UnionFindSet"],[3,"DeterministicState"],[8,"GeneralizedCross"],[8,"IndexMut2"],[8,"InertiaTensor"],[8,"Volumetric"],[3,"World"]]};
initSearch(searchIndex);
